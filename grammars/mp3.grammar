<?xml version="1.0" encoding="UTF-8"?>
<ufwb version="1.15.4">
    <grammar name="MP3" start="id:74" author="Andreas Pehnack" email="andreas@synalysis.com" fileextension="mp3" uti="public.mp3">
        <description>Grammar for MP3 files</description>
        <structure name="MP3 file" id="74" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <structure name="ID3" id="75" repeatmin="0" order="variable">
                <structref name="ID3V2.0" id="79" repeatmin="0" structure="id:78"/>
                <structref name="ID3v2.3" id="81" repeatmin="0" structure="id:80"/>
            </structure>
            <structure name="Frames" id="83" repeatmax="-1" order="variable">
                <structref name="Frame" id="85" repeatmin="0" structure="id:84"/>
                <structref name="ID3v1" id="86" repeatmin="0" structure="id:76"/>
                <number name="Padding" id="87" repeatmin="0" type="integer" length="1"/>
            </structure>
        </structure>
        <structure name="MPEG Audio Frame Frame" id="84" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <number name="Frame sync" mustmatch="yes" id="90" fillcolor="FF2F92" type="integer" length="11" lengthunit="bit" display="hex">
                <fixedvalues>
                    <fixedvalue name="SYNC" value="0x7FF"/>
                </fixedvalues>
            </number>
            <number name="MPEG Audio version ID" id="91" type="integer" length="2" lengthunit="bit">
                <fixedvalues>
                    <fixedvalue name="MPEG Version 2.5" value="0"/>
                    <fixedvalue name="reserved" value="1"/>
                    <fixedvalue name="MPEG Version 2 (ISO/IEC 13818-3)" value="2"/>
                    <fixedvalue name="MPEG Version 1 (ISO/IEC 11172-3)" value="3"/>
                </fixedvalues>
            </number>
            <number name="Layer description" id="92" type="integer" length="2" lengthunit="bit">
                <fixedvalues>
                    <fixedvalue name="reserved" value="0"/>
                    <fixedvalue name="Layer III" value="1"/>
                    <fixedvalue name="Layer II" value="2"/>
                    <fixedvalue name="Layer I" value="3"/>
                </fixedvalues>
            </number>
            <number name="Protection bit" id="93" type="integer" length="1" lengthunit="bit">
                <fixedvalues>
                    <fixedvalue name="Protected by CRC" value="0"/>
                    <fixedvalue name="Not protected" value="1"/>
                </fixedvalues>
            </number>
            <number name="Bitrate index" id="94" type="integer" length="4" lengthunit="bit"/>
            <scriptelement name="Bitrate" id="95">
                <script name="unnamed" type="Generic">
                    <source language="Python">rows = 16
columns = 5
bitrateMatrix = [[0 for x in range(columns)] for y in range(rows)]

# First row
for i in range(columns):
	bitrateMatrix[0][i] = &quot;free&quot;

# Last row
for i in range(columns):
	bitrateMatrix[rows-1][i] = &quot;bad&quot;

bitrateMatrix[1] = &quot;32,32,32,32,8&quot;.split(&quot;,&quot;)
bitrateMatrix[2] = &quot;64,48,40,48,16&quot;.split(&quot;,&quot;)
bitrateMatrix[3] = &quot;96,56,48,56,24&quot;.split(&quot;,&quot;)
bitrateMatrix[4] = &quot;128,64,56,64,32&quot;.split(&quot;,&quot;)
bitrateMatrix[5] = &quot;160,80,64,80,40&quot;.split(&quot;,&quot;)
bitrateMatrix[6] = &quot;192,96,80,96,48&quot;.split(&quot;,&quot;)
bitrateMatrix[7] = &quot;224,112,96,112,56&quot;.split(&quot;,&quot;)
bitrateMatrix[8] = &quot;256,128,112,128,64&quot;.split(&quot;,&quot;)
bitrateMatrix[9] = &quot;288,160,128,144,80&quot;.split(&quot;,&quot;)
bitrateMatrix[10] = &quot;320,192,160,160,96&quot;.split(&quot;,&quot;)
bitrateMatrix[11] = &quot;352,224,192,176,112&quot;.split(&quot;,&quot;)
bitrateMatrix[12] = &quot;384,256,224,192,128&quot;.split(&quot;,&quot;)
bitrateMatrix[13] = &quot;416,320,256,224,144&quot;.split(&quot;,&quot;)
bitrateMatrix[14] = &quot;448,384,320,256,160&quot;.split(&quot;,&quot;)

# get collection with results so far
results = currentMapper.getCurrentResults()
# get bitrate index
lastResult = results.getLastResult()
versionIdResult = results.getResultByName(&quot;MPEG Audio version ID&quot;)
layerResult = results.getResultByName(&quot;Layer description&quot;)
# access the parsed values
bitrateIndexValue = lastResult.getValue()
versionIdValue = versionIdResult.getValue()
layerValue = layerResult.getValue()
# get the value parsed
bitrateIndex = bitrateIndexValue.getUnsignedNumber()
version = versionIdValue.getUnsignedNumber()
layer = layerValue.getUnsignedNumber()

column = 0

if (version == 3):
	if (layer == 3):
		column = 0
	elif (layer == 2):
		column = 1
	elif (layer == 1):
		column = 2
elif (version == 2):
	if (layer == 3):
		column = 3
	else:
		column = 4

bitrate = bitrateMatrix[bitrateIndex][column] + &quot; kbit&quot;

value = Value()
value.setString(bitrate)

# element = currentMapper.getCurrentElement()
element = Element(ELEMENT_STRING, &quot;Bitrate&quot;, True)

# add element with value to results
results.addElement(element, 0, 0, value)
</source>
                </script>
            </scriptelement>
            <number name="Sampling rate frequency index" id="96" fillcolor="72FCD5" type="integer" length="2" lengthunit="bit"/>
            <scriptelement name="Sampling rate" id="97">
                <script name="unnamed" type="Generic">
                    <source language="Python">rows = 4
columns = 3
samplingRateMatrix = [[0 for x in range(columns)] for y in range(rows)]

samplingRateMatrix[0] = &quot;44100,22050,11025&quot;.split(&quot;,&quot;)
samplingRateMatrix[1] = &quot;48000,24000,12000&quot;.split(&quot;,&quot;)
samplingRateMatrix[2] = &quot;32000,16000,8000&quot;.split(&quot;,&quot;)
samplingRateMatrix[3] = &quot;reserv.,reserv.,reserv.&quot;.split(&quot;,&quot;)

# get collection with results so far
results = currentMapper.getCurrentResults()
# get sampling rate index
lastResult = results.getLastResult()
versionIdResult = results.getResultByName(&quot;MPEG Audio version ID&quot;)
# access the parsed values
samplingRateIndexValue = lastResult.getValue()
versionIdValue = versionIdResult.getValue()
# get the value parsed
samplingRateIndex = samplingRateIndexValue.getUnsignedNumber()
version = versionIdValue.getUnsignedNumber()

column = 0

if (version == 3):
	column = 0
elif (version == 2):
	column = 1
else:
	column = 2

samplingRate = samplingRateMatrix[samplingRateIndex][column] + &quot; Hz&quot;
print samplingRate

value = Value()
value.setString(samplingRate)

# element = currentMapper.getCurrentElement()
element = Element(ELEMENT_STRING, &quot;Sampling rate&quot;, True)

# add element with value to results
results.addElement(element, 0, 0, value)
</source>
                </script>
            </scriptelement>
            <number name="Padding bit" id="98" type="integer" length="1" lengthunit="bit"/>
            <number name="Private bit" id="99" type="integer" length="1" lengthunit="bit"/>
            <number name="Channel Mode" id="100" type="integer" length="2" lengthunit="bit">
                <fixedvalues>
                    <fixedvalue name="Stereo" value="0"/>
                    <fixedvalue name="Joint Stereo" value="1"/>
                    <fixedvalue name="Dual channel (Stereo)" value="2"/>
                    <fixedvalue name="Single channel (Mono)" value="3"/>
                </fixedvalues>
            </number>
            <number name="Mode extension" id="101" type="integer" length="2" lengthunit="bit"/>
            <number name="Copyright" id="102" fillcolor="FF7D78" type="integer" length="1" lengthunit="bit">
                <fixedvalues>
                    <fixedvalue name="Audio is not copyrighted" value="0"/>
                    <fixedvalue name="Audio is copyrighted" value="1"/>
                </fixedvalues>
            </number>
            <number name="Original" id="103" type="integer" length="1" lengthunit="bit">
                <fixedvalues>
                    <fixedvalue name="Copy of original media" value="0"/>
                    <fixedvalue name="Original media" value="1"/>
                </fixedvalues>
            </number>
            <number name="Emphasis" id="104" type="integer" length="2" lengthunit="bit">
                <fixedvalues>
                    <fixedvalue name="none" value="0"/>
                    <fixedvalue name="50/15 ms" value="1"/>
                    <fixedvalue name="reserved" value="2"/>
                    <fixedvalue name="CCIT J.17" value="3"/>
                </fixedvalues>
            </number>
            <scriptelement name="ParseCRC" id="105">
                <script name="unnamed" type="Generic">
                    <source language="Python"># get collection with results so far
results = currentMapper.getCurrentResults()
# get protection bit
protectionBitResult = results.getResultByName(&quot;Protection bit&quot;)
# access the parsed values
protectionBitValue = protectionBitResult.getValue()
# get the value parsed
protectionBit = protectionBitValue.getUnsignedNumber()

if (protectionBit == 0):
	element = Element(ELEMENT_NUMBER, &quot;CRC&quot;, True)
	element.setLength(&quot;2&quot;, LENGTH_UNIT_BYTES)
	element.setNumberDisplayType(NUMBER_DISPLAY_HEX)
	currentMapper.mapElementWithSize(element, 2)
</source>
                </script>
            </scriptelement>
            <scriptelement name="Length" id="106">
                <script name="unnamed" type="Generic">
                    <source language="Python"># get collection with results so far
results = currentMapper.getCurrentResults()
# get bitrate index
bitrateResult = results.getResultByName(&quot;Bitrate&quot;)
samplingRateResult = results.getResultByName(&quot;Sampling rate&quot;)
layerResult = results.getResultByName(&quot;Layer description&quot;)
paddingResult = results.getResultByName(&quot;Padding bit&quot;)
# access the parsed values
bitrateValue = bitrateResult.getValue()
samplingRateValue = samplingRateResult.getValue()
layerValue = layerResult.getValue()
paddingValue = paddingResult.getValue()
# get the value parsed
bitrate = bitrateValue.getUnsignedNumber() * 1000
samplingRate = samplingRateValue.getUnsignedNumber()
layer = layerValue.getUnsignedNumber()
paddingBit = paddingValue.getUnsignedNumber()

if (samplingRate &lt; 1):
	print &quot;Sampling rate is negative&quot;

frameLengthInBytes = 0
padding = 0

if (layer == 3):
	if (paddingBit == 1):
		padding = 4
	frameLengthInBytes =  (12 * bitrate / samplingRate + padding) * 4 - 4
else:
	if (paddingBit == 1):
		padding = 1
	frameLengthInBytes = 144 * bitrate / samplingRate + padding - 4

if (frameLengthInBytes &lt; 0):
	print &quot;Frame length not positive&quot;


value = Value()
value.setUnsigned(frameLengthInBytes)

element = Element(ELEMENT_NUMBER, &quot;Length&quot;, True)
# add element with value to results
results.addElement(element, 0, 0, value)
</source>
                </script>
            </scriptelement>
            <binary name="FrameData" id="107" length="Length"/>
        </structure>
        <structure name="ID3v1" id="76" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <string name="Identifier" mustmatch="yes" id="109" type="fixed-length" length="3">
                <fixedvalues>
                    <fixedvalue name="TAG" value="TAG"/>
                </fixedvalues>
            </string>
            <string name="Title" id="110" type="fixed-length" length="30"/>
            <string name="Artist" id="111" type="fixed-length" length="30"/>
            <string name="Album" id="112" type="fixed-length" length="30"/>
            <number name="Year" id="113" type="integer" length="1"/>
            <string name="Comment" id="114" type="fixed-length" length="30"/>
            <number name="Genre" id="115" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Blues" value="0"/>
                    <fixedvalue name="Classic Rock" value="1"/>
                    <fixedvalue name="Country" value="2"/>
                    <fixedvalue name="Dance" value="3"/>
                    <fixedvalue name="Disco" value="4"/>
                    <fixedvalue name="Func" value="5"/>
                    <fixedvalue name="Grunge" value="6"/>
                    <fixedvalue name="Hip-Hop" value="7"/>
                    <fixedvalue name="Jazz" value="8"/>
                    <fixedvalue name="Metal" value="9"/>
                    <fixedvalue name="New Age" value="10"/>
                    <fixedvalue name="Oldies" value="11"/>
                    <fixedvalue name="Other" value="12"/>
                    <fixedvalue name="Pop" value="13"/>
                    <fixedvalue name="R&amp;B" value="14"/>
                    <fixedvalue name="Rap" value="15"/>
                    <fixedvalue name="Reggae" value="16"/>
                    <fixedvalue name="Rock" value="17"/>
                    <fixedvalue name="Techno" value="18"/>
                    <fixedvalue name="Industrial" value="19"/>
                    <fixedvalue name="Alternative" value="20"/>
                    <fixedvalue name="Ska" value="21"/>
                    <fixedvalue name="Death Metal" value="22"/>
                    <fixedvalue name="Pranks" value="23"/>
                    <fixedvalue name="Soundtrack" value="24"/>
                    <fixedvalue name="Euro-Techno" value="25"/>
                    <fixedvalue name="Ambient" value="26"/>
                    <fixedvalue name="Trip-Hop" value="27"/>
                    <fixedvalue name="Vocal" value="28"/>
                    <fixedvalue name="Jazz+Funk" value="29"/>
                    <fixedvalue name="Fusion" value="30"/>
                    <fixedvalue name="Trance" value="31"/>
                    <fixedvalue name="Classical" value="32"/>
                    <fixedvalue name="Instrumental" value="33"/>
                    <fixedvalue name="Acid" value="34"/>
                    <fixedvalue name="House" value="35"/>
                    <fixedvalue name="Game" value="36"/>
                    <fixedvalue name="Sound Clip" value="37"/>
                    <fixedvalue name="Gospel" value="38"/>
                    <fixedvalue name="Noise" value="39"/>
                    <fixedvalue name="AlternRock" value="40"/>
                    <fixedvalue name="Bass" value="41"/>
                    <fixedvalue name="Soul" value="42"/>
                    <fixedvalue name="Punk" value="43"/>
                    <fixedvalue name="Space" value="44"/>
                    <fixedvalue name="Meditative" value="45"/>
                    <fixedvalue name="Instrumental Pop" value="46"/>
                    <fixedvalue name="Instrumental Rock" value="47"/>
                    <fixedvalue name="Ethnic" value="48"/>
                    <fixedvalue name="Gothic" value="49"/>
                    <fixedvalue name="Darkwave" value="50"/>
                    <fixedvalue name="Techno-Industrial" value="51"/>
                    <fixedvalue name="Electronic" value="52"/>
                    <fixedvalue name="Pop-Folk" value="53"/>
                    <fixedvalue name="Eurodance" value="54"/>
                    <fixedvalue name="Dream" value="55"/>
                    <fixedvalue name="Southern Rock" value="56"/>
                    <fixedvalue name="Comedy" value="57"/>
                    <fixedvalue name="Cult" value="58"/>
                    <fixedvalue name="Gangsta" value="59"/>
                    <fixedvalue name="Top 40" value="60"/>
                    <fixedvalue name="Christian Rap" value="61"/>
                    <fixedvalue name="Pop/Funk" value="62"/>
                    <fixedvalue name="Jungle" value="63"/>
                    <fixedvalue name="Native American" value="64"/>
                    <fixedvalue name="Cabaret" value="65"/>
                    <fixedvalue name="New Wave" value="66"/>
                    <fixedvalue name="Psychadelic" value="67"/>
                    <fixedvalue name="Rave" value="68"/>
                    <fixedvalue name="Showtunes" value="69"/>
                    <fixedvalue name="Trailer" value="70"/>
                    <fixedvalue name="LoFi" value="71"/>
                    <fixedvalue name="Tribal" value="72"/>
                    <fixedvalue name="Acid Punk" value="73"/>
                    <fixedvalue name="Acid Jazz" value="74"/>
                    <fixedvalue name="Polka" value="75"/>
                    <fixedvalue name="Retro" value="76"/>
                    <fixedvalue name="Musical" value="77"/>
                    <fixedvalue name="Rock &amp; Roll" value="78"/>
                    <fixedvalue name="Hard Rock" value="79"/>
                    <fixedvalue name="Folk" value="80"/>
                    <fixedvalue name="Folk-Rock" value="81"/>
                    <fixedvalue name="National Folk" value="82"/>
                    <fixedvalue name="Swing" value="83"/>
                    <fixedvalue name="Fast Fusion" value="84"/>
                    <fixedvalue name="Bebob" value="85"/>
                    <fixedvalue name="Latin" value="86"/>
                    <fixedvalue name="Revival" value="87"/>
                    <fixedvalue name="Celtic" value="88"/>
                    <fixedvalue name="Bluegrass" value="89"/>
                    <fixedvalue name="Avantgarde" value="90"/>
                    <fixedvalue name="Gothic Rock" value="91"/>
                    <fixedvalue name="Progressive Rock" value="92"/>
                    <fixedvalue name="Psychedelic Rock" value="93"/>
                    <fixedvalue name="Symphonic Rock" value="94"/>
                    <fixedvalue name="Slow Rock" value="95"/>
                    <fixedvalue name="Big Band" value="96"/>
                    <fixedvalue name="Chorus" value="97"/>
                    <fixedvalue name="Easy Listening" value="98"/>
                    <fixedvalue name="Acoustic" value="99"/>
                    <fixedvalue name="Humour" value="100"/>
                    <fixedvalue name="Speech" value="101"/>
                    <fixedvalue name="Chanson" value="102"/>
                    <fixedvalue name="Opera" value="103"/>
                    <fixedvalue name="Chamber Music" value="104"/>
                    <fixedvalue name="Sonata" value="105"/>
                    <fixedvalue name="Symphony" value="106"/>
                    <fixedvalue name="Booty Brass" value="107"/>
                    <fixedvalue name="Primus" value="108"/>
                    <fixedvalue name="Porn Groove" value="109"/>
                    <fixedvalue name="Satire" value="110"/>
                    <fixedvalue name="Slow Jam" value="111"/>
                    <fixedvalue name="Club" value="112"/>
                    <fixedvalue name="Tango" value="113"/>
                    <fixedvalue name="Samba" value="114"/>
                    <fixedvalue name="Folklore" value="115"/>
                    <fixedvalue name="Ballad" value="116"/>
                    <fixedvalue name="Power Ballad" value="117"/>
                    <fixedvalue name="Rhythmic Soul" value="118"/>
                    <fixedvalue name="Freestyle" value="119"/>
                    <fixedvalue name="Duet" value="120"/>
                    <fixedvalue name="Punk Rock" value="121"/>
                    <fixedvalue name="Drum Solo" value="122"/>
                    <fixedvalue name="A Capela" value="123"/>
                    <fixedvalue name="Euro-House" value="124"/>
                    <fixedvalue name="Dance Hall" value="125"/>
                </fixedvalues>
            </number>
        </structure>
        <structure name="ID3v2" id="117" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <string name="Identifier" mustmatch="yes" id="118" type="fixed-length" length="3">
                <fixedvalues>
                    <fixedvalue name="ID3" value="ID3"/>
                </fixedvalues>
            </string>
            <number name="Major version" mustmatch="yes" id="119" type="integer" length="1"/>
            <number name="Minor version" mustmatch="yes" id="120" type="integer" length="1"/>
        </structure>
        <structure name="ID3V2.0" id="78" length="0" extends="id:117">
            <number name="Major version" id="123" type="integer">
                <fixedvalues>
                    <fixedvalue name="2" value="2"/>
                </fixedvalues>
            </number>
            <number name="Minor version" id="124" type="integer">
                <fixedvalues>
                    <fixedvalue name="0" value="0"/>
                </fixedvalues>
            </number>
            <number name="Unsynchronisation" id="125" type="integer" length="1" lengthunit="bit"/>
            <number name="Compression" id="126" type="integer" length="1" lengthunit="bit"/>
            <number name="OtherFlags" id="127" type="integer" length="6" lengthunit="bit"/>
            <number name="RawSize" id="128" type="integer" length="32" lengthunit="bit"/>
            <scriptelement name="Size" id="129">
                <script name="unnamed" type="Generic">
                    <source language="Python">size = 4

# get collection with results so far
results = currentMapper.getCurrentResults()
lastResult = results.getLastResult()
# access the parsed value
value = lastResult.getValue()
# get the value parsed
number = value.getUnsignedNumber()

decodedNumber = (number &amp; 0x7F) + ((number &amp; 0x7F00) &gt;&gt; 1) + ((number &amp; 0x7F0000) &gt;&gt; 2) + ((number &amp; 0x7F000000) &gt;&gt; 3)

print number
print decodedNumber

value = Value()
value.setUnsigned(decodedNumber)

# element = currentMapper.getCurrentElement()
element = Element(ELEMENT_NUMBER, &quot;Size&quot;, True)

# add element with value to results
results.addElement(element, size, 0, value)
</source>
                </script>
            </scriptelement>
            <structure name="Frames" id="130" length="Size">
                <structure name="Switch" id="131" repeatmax="-1" order="variable">
                    <structref name="BUF Frame - Recommended buffer size" id="133" repeatmin="0" structure="id:132"/>
                    <structref name="CNT Frame - Play counter" id="135" repeatmin="0" structure="id:134"/>
                    <structref name="COM Frame - Comments" id="137" repeatmin="0" structure="id:136"/>
                    <structref name="CRA Frame - Audio encryption" id="139" repeatmin="0" structure="id:138"/>
                    <structref name="CRM Frame - Encrypted meta frame" id="141" repeatmin="0" structure="id:140"/>
                    <structref name="ETC Frame - Event timing codes" id="143" repeatmin="0" structure="id:142"/>
                    <structref name="EQU Frame - Equalisation" id="145" repeatmin="0" structure="id:144"/>
                    <structref name="GEO Frame - General encapsulated object" id="147" repeatmin="0" structure="id:146"/>
                    <structref name="IPL Frame - Involved people list" id="149" repeatmin="0" structure="id:148"/>
                    <structref name="LNK Frame - Linked information" id="151" repeatmin="0" structure="id:150"/>
                    <structref name="MCI Frame - Music CD Identifier" id="153" repeatmin="0" structure="id:152"/>
                    <structref name="MLL Frame - MPEG location lookup table" id="155" repeatmin="0" structure="id:154"/>
                    <structref name="PIC Frame - Attached picture" id="157" repeatmin="0" structure="id:156"/>
                    <structref name="POP Frame - Popularimeter" id="159" repeatmin="0" structure="id:158"/>
                    <structref name="REV Frame - Reverb" id="161" repeatmin="0" structure="id:160"/>
                    <structref name="RVA Frame - Relative volume adjustment" id="163" repeatmin="0" structure="id:162"/>
                    <structref name="SLT Frame - Synchronised lyrics/text" id="165" repeatmin="0" structure="id:164"/>
                    <structref name="STC Frame - Synced tempo codes" id="167" repeatmin="0" structure="id:166"/>
                    <structref name="TAL Frame - Album/Movie/Show title" id="169" repeatmin="0" structure="id:168"/>
                    <structref name="TBP Frame - BPM (Beats Per Minute)" id="171" repeatmin="0" structure="id:170"/>
                    <structref name="TCM Frame - Composer(s)" id="173" repeatmin="0" structure="id:172"/>
                    <structref name="TCO Frame - Content type" id="175" repeatmin="0" structure="id:174"/>
                    <structref name="TCR Frame - Copyright message" id="177" repeatmin="0" structure="id:176"/>
                    <structref name="TDA Frame - Date" id="179" repeatmin="0" structure="id:178"/>
                    <structref name="TDY Frame - Playlist delay" id="181" repeatmin="0" structure="id:180"/>
                    <structref name="TEN Frame - Encoded by" id="183" repeatmin="0" structure="id:182"/>
                    <structref name="TFT Frame - File type" id="185" repeatmin="0" structure="id:184"/>
                    <structref name="TIM Frame - Time" id="187" repeatmin="0" structure="id:186"/>
                    <structref name="TKE Frame - Initial key" id="189" repeatmin="0" structure="id:188"/>
                    <structref name="TLA Frame - Language(s)" id="191" repeatmin="0" structure="id:190"/>
                    <structref name="TLE Frame - Length" id="193" repeatmin="0" structure="id:192"/>
                    <structref name="TMT Frame - Media type" id="195" repeatmin="0" structure="id:194"/>
                    <structref name="TOA Frame - Original artist(s)/performer(s)" id="197" repeatmin="0" structure="id:196"/>
                    <structref name="TOF Frame - Original filename" id="199" repeatmin="0" structure="id:198"/>
                    <structref name="TOL Frame - Original Lyricist(s)/text writer(s)" id="201" repeatmin="0" structure="id:200"/>
                    <structref name="TOR Frame - Original release year" id="203" repeatmin="0" structure="id:202"/>
                    <structref name="TOT Frame - Original album/Movie/Show title" id="205" repeatmin="0" structure="id:204"/>
                    <structref name="TP1 Frame - Lead artist(s)/Lead performer(s)/Soloist(s)/Performing group" id="207" repeatmin="0" structure="id:206"/>
                    <structref name="TP2 Frame - Band/Orchestra/Accompaniment" id="209" repeatmin="0" structure="id:208"/>
                    <structref name="TP3 Frame - Conductor" id="211" repeatmin="0" structure="id:210"/>
                    <structref name="TP4 Frame - Interpreted, remixed, or otherwise modified by" id="213" repeatmin="0" structure="id:212"/>
                    <structref name="TPA Frame - Part of a set" id="215" repeatmin="0" structure="id:214"/>
                    <structref name="TPB Frame - Publisher" id="217" repeatmin="0" structure="id:216"/>
                    <structref name="TRC Frame - ISRC (International Standard Recording Code)" id="219" repeatmin="0" structure="id:218"/>
                    <structref name="TRD Frame - Recording dates" id="221" repeatmin="0" structure="id:220"/>
                    <structref name="TRK Frame - Track number/Position in set" id="223" repeatmin="0" structure="id:222"/>
                    <structref name="TSA Frame - Album Sort" id="225" repeatmin="0" structure="id:224"/>
                    <structref name="TS2 Frame - Album Artist Sort" id="227" repeatmin="0" structure="id:226"/>
                    <structref name="TSC Frame - Composer Sort" id="229" repeatmin="0" structure="id:228"/>
                    <structref name="TSI Frame - Size" id="231" repeatmin="0" structure="id:230"/>
                    <structref name="TSP Frame - Artist Sort" id="233" repeatmin="0" structure="id:232"/>
                    <structref name="TSS Frame - Software/hardware and settings used for encoding" id="235" repeatmin="0" structure="id:234"/>
                    <structref name="TST Frame - Title Sort" id="237" repeatmin="0" structure="id:236"/>
                    <structref name="TT1 Frame - Content group description" id="239" repeatmin="0" structure="id:238"/>
                    <structref name="TT2 Frame - Title/Songname/Content description" id="241" repeatmin="0" structure="id:240"/>
                    <structref name="TT3 Frame - Subtitle/Description refinement" id="243" repeatmin="0" structure="id:242"/>
                    <structref name="TXT Frame - Lyricist(s)/text writer(s)" id="245" repeatmin="0" structure="id:244"/>
                    <structref name="TXX Frame - User defined text information frame" id="247" repeatmin="0" structure="id:246"/>
                    <structref name="TYE Frame - Year" id="249" repeatmin="0" structure="id:248"/>
                    <structref name="UFI Frame - Unique file identifier" id="251" repeatmin="0" structure="id:250"/>
                    <structref name="ULT Frame - Unsychronised lyrics/text transcription" id="253" repeatmin="0" structure="id:252"/>
                    <structref name="ULT Frame - Unsychronised lyrics/text transcription-1" id="254" repeatmin="0" structure="id:252"/>
                    <structref name="ID3v2.0 Frame" id="256" structure="id:255"/>
                </structure>
            </structure>
        </structure>
        <structure name="ID3v2.3" id="80" length="0" extends="id:117" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <number name="Major version" id="261" type="integer">
                <fixedvalues>
                    <fixedvalue name="3" value="3"/>
                </fixedvalues>
            </number>
            <number name="Minor version" id="262" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Version 0" value="0"/>
                </fixedvalues>
            </number>
            <number name="Unsynchronisation" id="263" type="integer" length="1" lengthunit="bit"/>
            <number name="ExtendedHeader" id="264" type="integer" length="1" lengthunit="bit"/>
            <number name="Experimental indicator" id="265" type="integer" length="1" lengthunit="bit"/>
            <number name="Unused" id="266" type="integer" length="5" lengthunit="bit"/>
            <number name="RawSize" id="267" type="integer" length="4" display="hex"/>
            <scriptelement name="Size" id="268">
                <script name="unnamed" type="Generic">
                    <source language="Python">size = 4

# get collection with results so far
results = currentMapper.getCurrentResults()
lastResult = results.getLastResult()
# access the parsed value
value = lastResult.getValue()
# get the value parsed
number = value.getUnsignedNumber()

decodedNumber = (number &amp; 0x7F) + ((number &amp; 0x7F00) &gt;&gt; 1) + ((number &amp; 0x7F0000) &gt;&gt; 2) + ((number &amp; 0x7F000000) &gt;&gt; 3)

print number
print decodedNumber

value = Value()
value.setUnsigned(decodedNumber)

# element = currentMapper.getCurrentElement()
element = Element(ELEMENT_NUMBER, &quot;Size&quot;, True)

# add element with value to results
results.addElement(element, size, 0, value)
</source>
                </script>
            </scriptelement>
            <structure name="Frames" id="269" length="Size">
                <structure name="Switch" id="270" length="0" repeatmax="-1" order="variable">
                    <structref name="AENC Frame - Audio encryption" id="272" repeatmin="0" structure="id:271"/>
                    <structref name="APIC Frame" id="274" repeatmin="0" structure="id:273"/>
                    <structref name="ASPI Frame - Audio seek point index" id="276" repeatmin="0" structure="id:275"/>
                    <structref name="COMM Frame - Comments" id="278" repeatmin="0" structure="id:277"/>
                    <structref name="COMR Frame - Commercial frame" id="280" repeatmin="0" structure="id:279"/>
                    <structref name="ENCR Frame - Encryption method registration" id="282" repeatmin="0" structure="id:281"/>
                    <structref name="EQUA Frame - Equalization" id="284" repeatmin="0" structure="id:283"/>
                    <structref name="EQU2 Frame - Equalisation (2)" id="286" repeatmin="0" structure="id:285"/>
                    <structref name="ETCO Frame - Event timing codes" id="288" repeatmin="0" structure="id:287"/>
                    <structref name="GEOB Frame - General encapsulated object" id="290" repeatmin="0" structure="id:289"/>
                    <structref name="GRID Frame - Group identification registration" id="292" repeatmin="0" structure="id:291"/>
                    <structref name="IPLS Frame - Involved people list" id="294" repeatmin="0" structure="id:293"/>
                    <structref name="LINK Frame - Linked information" id="296" repeatmin="0" structure="id:295"/>
                    <structref name="MLLT Frame - MPEG location lookup table" id="298" repeatmin="0" structure="id:297"/>
                    <structref name="OWNE Frame - Ownership frame" id="300" repeatmin="0" structure="id:299"/>
                    <structref name="PRIV Frame - Ownership frame" id="302" repeatmin="0" structure="id:301"/>
                    <structref name="PCNT Frame - Play counter" id="304" repeatmin="0" structure="id:303"/>
                    <structref name="POPM Frame - Popularimeter" id="306" repeatmin="0" structure="id:305"/>
                    <structref name="POSS Frame - Position synchronisation frame" id="308" repeatmin="0" structure="id:307"/>
                    <structref name="RBUF Frame - Recommended buffer size" id="310" repeatmin="0" structure="id:309"/>
                    <structref name="RVAD Frame - Relative volume adjustment" id="312" repeatmin="0" structure="id:311"/>
                    <structref name="RVA2 Frame - Relative volume adjustment (2)" id="314" repeatmin="0" structure="id:313"/>
                    <structref name="RVRB Frame - Reverb" id="316" repeatmin="0" structure="id:315"/>
                    <structref name="SEEK Frame - Seek frame" id="318" repeatmin="0" structure="id:317"/>
                    <structref name="SIGN Frame - Signature frame" id="320" repeatmin="0" structure="id:319"/>
                    <structref name="SYLT Frame - Synchronized lyric/text" id="322" repeatmin="0" structure="id:321"/>
                    <structref name="SYTC Frame - Synchronized tempo codes" id="324" repeatmin="0" structure="id:323"/>
                    <structref name="TALB Frame - Album/Movie/Show title" id="326" repeatmin="0" structure="id:325"/>
                    <structref name="TBPM Frame - BPM (beats per minute)" id="328" repeatmin="0" structure="id:327"/>
                    <structref name="TCOM Frame - Composer" id="330" repeatmin="0" structure="id:329"/>
                    <structref name="TCON Frame - Content type" id="332" repeatmin="0" structure="id:331"/>
                    <structref name="TCOP Frame - Copyright message" id="334" repeatmin="0" structure="id:333"/>
                    <structref name="TDAT Frame - Date" id="336" repeatmin="0" structure="id:335"/>
                    <structref name="TDEN Frame - Encoding time" id="338" repeatmin="0" structure="id:337"/>
                    <structref name="TDLY Frame - Playlist delay" id="340" repeatmin="0" structure="id:339"/>
                    <structref name="TDOR Frame - Original release time" id="342" repeatmin="0" structure="id:341"/>
                    <structref name="TDRC Frame - Recording time" id="344" repeatmin="0" structure="id:343"/>
                    <structref name="TDRL Frame - Release time" id="346" repeatmin="0" structure="id:345"/>
                    <structref name="TDTG Frame - Tagging time" id="348" repeatmin="0" structure="id:347"/>
                    <structref name="TENC Frame - Encoded by" id="350" repeatmin="0" structure="id:349"/>
                    <structref name="TEXT Frame - Lyricist/Text writer" id="352" repeatmin="0" structure="id:351"/>
                    <structref name="TFLT Frame - File type" id="354" repeatmin="0" structure="id:353"/>
                    <structref name="TIME Frame - Time" id="356" repeatmin="0" structure="id:355"/>
                    <structref name="TIPL Frame - Involved people list" id="358" repeatmin="0" structure="id:357"/>
                    <structref name="TIT1 Frame - Content group description" id="360" repeatmin="0" structure="id:359"/>
                    <structref name="TIT2 Frame" id="362" repeatmin="0" structure="id:361"/>
                    <structref name="TIT3 Frame - Subtitle/Description refinement" id="364" repeatmin="0" structure="id:363"/>
                    <structref name="TKEY Frame - Initial key" id="366" repeatmin="0" structure="id:365"/>
                    <structref name="TLAN Frame - Language(s)" id="368" repeatmin="0" structure="id:367"/>
                    <structref name="TLEN Frame - Length" id="370" repeatmin="0" structure="id:369"/>
                    <structref name="TMCL Frame - Musician credits list" id="372" repeatmin="0" structure="id:371"/>
                    <structref name="TMED Frame - Media type" id="374" repeatmin="0" structure="id:373"/>
                    <structref name="TMOO Frame - Mood" id="376" repeatmin="0" structure="id:375"/>
                    <structref name="TOAL Frame - Original album/movie/show title" id="378" repeatmin="0" structure="id:377"/>
                    <structref name="TOFN Frame - Original filename" id="380" repeatmin="0" structure="id:379"/>
                    <structref name="TOLY Frame - Original lyricist(s)/text writer(s)" id="382" repeatmin="0" structure="id:381"/>
                    <structref name="TOPE Frame - Original artist(s)/performer(s)" id="384" repeatmin="0" structure="id:383"/>
                    <structref name="TORY Frame - Original release year" id="386" repeatmin="0" structure="id:385"/>
                    <structref name="TOWN Frame - File owner/licensee" id="388" repeatmin="0" structure="id:387"/>
                    <structref name="TPE1 Frame" id="390" repeatmin="0" structure="id:389"/>
                    <structref name="TPE2 Frame - Band/orchestra/accompaniment" id="392" repeatmin="0" structure="id:391"/>
                    <structref name="TPE3 Frame - Conductor/performer refinement" id="394" repeatmin="0" structure="id:393"/>
                    <structref name="TPE4 Frame - Interpreted, remixed, or otherwise modified by" id="396" repeatmin="0" structure="id:395"/>
                    <structref name="TPOS Frame - Part of a set" id="398" repeatmin="0" structure="id:397"/>
                    <structref name="TPUB Frame - Publisher" id="400" repeatmin="0" structure="id:399"/>
                    <structref name="TPRO Frame - Produced notice" id="402" repeatmin="0" structure="id:401"/>
                    <structref name="TRCK Frame - Track number/Position in set" id="404" repeatmin="0" structure="id:403"/>
                    <structref name="TRDA Frame - Recording dates" id="406" repeatmin="0" structure="id:405"/>
                    <structref name="TRSN Frame - Internet radio station name" id="408" repeatmin="0" structure="id:407"/>
                    <structref name="TRSO Frame - Internet radio station owner" id="410" repeatmin="0" structure="id:409"/>
                    <structref name="TSIZ Frame - Size" id="412" repeatmin="0" structure="id:411"/>
                    <structref name="TSOA Frame - Album sort order" id="414" repeatmin="0" structure="id:413"/>
                    <structref name="TSOP Frame - Performer sort order" id="416" repeatmin="0" structure="id:415"/>
                    <structref name="TSOT Frame - Title sort order" id="418" repeatmin="0" structure="id:417"/>
                    <structref name="TSRC Frame - ISRC (international standard recording code)" id="420" repeatmin="0" structure="id:419"/>
                    <structref name="TSSE Frame - Software/Hardware and settings used for encoding" id="422" repeatmin="0" structure="id:421"/>
                    <structref name="TSST Frame - Set subtitle" id="424" repeatmin="0" structure="id:423"/>
                    <structref name="TYER Frame - Year" id="426" repeatmin="0" structure="id:425"/>
                    <structref name="TXXX Frame - User defined text information frame" id="428" repeatmin="0" structure="id:427"/>
                    <structref name="UFID Frame - Unique file identifier" id="430" repeatmin="0" structure="id:429"/>
                    <structref name="USER Frame - Terms of use" id="432" repeatmin="0" structure="id:431"/>
                    <structref name="USLT Frame - Unsychronized lyric/text transcription" id="434" repeatmin="0" structure="id:433"/>
                    <structref name="WCOM Frame - Commercial information" id="436" repeatmin="0" structure="id:435"/>
                    <structref name="WCOP Frame - Copyright/Legal information" id="438" repeatmin="0" structure="id:437"/>
                    <structref name="WOAF Frame - Official audio file webpage" id="440" repeatmin="0" structure="id:439"/>
                    <structref name="WOAR Frame - Official artist/performer webpage" id="442" repeatmin="0" structure="id:441"/>
                    <structref name="WOAS Frame - Official audio source webpage" id="444" repeatmin="0" structure="id:443"/>
                    <structref name="WORS Frame - Official internet radio station homepage" id="446" repeatmin="0" structure="id:445"/>
                    <structref name="WPAY Frame - Payment" id="448" repeatmin="0" structure="id:447"/>
                    <structref name="WPUB Frame - Publishers official webpage" id="450" repeatmin="0" structure="id:449"/>
                    <structref name="WXXX Frame - User defined URL link frame" id="452" repeatmin="0" structure="id:451"/>
                    <structref name="ID3v2 Frame" id="454" repeatmin="0" structure="id:453"/>
                </structure>
            </structure>
        </structure>
        <structure name="ID3v2.0 Frame" id="255" length="Size + 6" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <string name="Frame ID" mustmatch="yes" id="458" fillcolor="D4FB78" type="fixed-length" length="3"/>
            <number name="Size" id="459" fillcolor="73FDFF" type="integer" length="3"/>
        </structure>
        <structure name="BUF Frame - Recommended buffer size" id="132" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>Sometimes the server from which a audio file is streamed is aware of transmission or coding problems resulting in interruptions in the audio stream. In these cases, the size of the buffer can be recommended by the server using this frame. If the 'embedded info flag' is true (1) then this indicates that an ID3 tag with the maximum size described in 'Buffer size' may occur in the audiostream.
In such case the tag should reside between two MPEG [MPEG] frames, if the audio is MPEG encoded. If the position of the next tag is known, offset to next tag' may be used. The offset is calculated from the end of tag in which this frame resides to the first byte of the header in the next. This field may be omitted. Embedded tags is currently not recommended since this could render unpredictable behaviour from present software/hardware. The 'Buffer size' should be kept to a minimum. There may only be one &quot;BUF&quot; frame in each tag.</description>
            <string name="Frame ID" id="461" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="BUF" value="BUF"/>
                </fixedvalues>
            </string>
            <number name="Size" id="462" type="integer"/>
            <number name="Embedded info flag" id="463" type="integer" length="1"/>
            <number name="Offset to next tag" id="464" type="integer" length="4"/>
        </structure>
        <structure name="CNT Frame - Play counter" id="134" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This is simply a counter of the number of times a file has been played. The value is increased by one every time the file begins to play. There may only be one &quot;CNT&quot; frame in each tag. When the counter reaches all one's, one byte is inserted in front of the counter thus making the counter eight bits bigger.  The counter must be at least 32-bits long to begin with.</description>
            <string name="Frame ID" id="466" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="CNT" value="CNT"/>
                </fixedvalues>
            </string>
            <number name="Size" id="467" type="integer"/>
            <number name="Counter" id="468" type="integer" length="4"/>
        </structure>
        <structure name="COM Frame - Comments" id="136" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no" valueexpression="The actual text">
            <description>This frame replaces the old 30-character comment field in ID3v1. It consists of a frame head followed by encoding, language and content descriptors and is ended with the actual comment as a text string.
Newline characters are allowed in the comment text string. There may be more than one comment frame in each tag, but only one with the same language and content descriptor.</description>
            <string name="Frame ID" id="470" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="COM" value="COM"/>
                </fixedvalues>
            </string>
            <number name="Size" id="471" type="integer"/>
            <number name="Text Encoding" id="472" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="ISO-8859-1" value="0"/>
                    <fixedvalue name="Unicode" value="1"/>
                </fixedvalues>
            </number>
            <string name="Language" id="473" type="fixed-length" length="3"/>
            <string name="Short content description" id="474" type="zero-terminated"/>
            <string name="The actual text" id="475" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="CRA Frame - Audio encryption" id="138" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This frame indicates if the actual audio stream is encrypted, and by whom. Since standardisation of such encrypion scheme is beyond this document, all &quot;CRA&quot; frames begin with a terminated string with a URL containing an email address, or a link to a location where an email address can be found, that belongs to the organisation responsible for this specific encrypted audio file. Questions regarding the encrypted audio should be sent to the email address specified. If a $00 is found directly after the 'Frame size' and the audiofile indeed is encrypted, the whole file may be considered useless.

After the 'Owner identifier', a pointer to an unencrypted part of the audio can be specified. The 'Preview start' and 'Preview length' is described in frames. If no part is unencrypted, these fields should be left zeroed. After the 'preview length' field follows optionally a datablock required for decryption of the audio. There may be more than one &quot;CRA&quot; frames in a tag, but only one with the same 'Owner identifier'.</description>
            <string name="Frame ID" id="477" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="CRA" value="CRA"/>
                </fixedvalues>
            </string>
            <number name="Size" id="478" type="integer"/>
            <string name="Owner identifier" id="479" type="zero-terminated"/>
            <number name="Preview start" id="480" type="integer" length="2"/>
            <number name="Preview length" id="481" type="integer" length="2"/>
            <binary name="Encryption info" id="482" length="remaining"/>
        </structure>
        <structure name="CRM Frame - Encrypted meta frame" id="140" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This frame contains one or more encrypted frames. This enables protection of copyrighted information such as pictures and text, that people might want to pay extra for. Since standardisation of such an encryption scheme is beyond this document, all &quot;CRM&quot; frames begin with a terminated string with a URL [URL] containing an email address, or a link to a location where an email adress can be found, that belongs to the organisation responsible for this specific encrypted meta frame.

Questions regarding the encrypted frame should be sent to the indicated email address. If a $00 is found directly after the 'Frame size', the whole frame should be ignored, and preferably be removed.
The 'Owner identifier' is then followed by a short content description and explanation as to why it's encrypted. After the 'content/explanation' description, the actual encrypted block follows.

When an ID3v2 decoder encounters a &quot;CRM&quot; frame, it should send the datablock to the 'plugin' with the corresponding 'owner identifier' and expect to receive either a datablock with one or several ID3v2 frames after each other or an error. There may be more than one &quot;CRM&quot; frames in a tag, but only one with the same 'owner identifier'.</description>
            <string name="Frame ID" id="484" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="CRM" value="CRM"/>
                </fixedvalues>
            </string>
            <number name="Size" id="485" type="integer"/>
            <string name="Owner identifier" id="486" type="zero-terminated"/>
            <string name="Content/explanation" id="487" type="zero-terminated"/>
            <binary name="Encrypted datablock" id="488" length="remaining"/>
        </structure>
        <structure name="ETC Frame - Event timing codes" id="142" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This frame allows synchronisation with key events in a song or sound.</description>
            <string name="Frame ID" id="490" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="ETC" value="ETC"/>
                </fixedvalues>
            </string>
            <number name="Size" id="491" type="integer"/>
            <number name="Time stamp format" id="492" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Absolute time, 32 bit sized, using MPEG [MPEG] frames as unit" value="1"/>
                    <fixedvalue name="Absolute time, 32 bit sized, using milliseconds as unit" value="2"/>
                </fixedvalues>
            </number>
            <structure name="Key Events" id="493" repeatmax="-1">
                <number name="Type" id="494" type="integer" length="1" display="hex">
                    <fixedvalues>
                        <fixedvalue name="padding" value="0x0"/>
                        <fixedvalue name="end of initial silence" value="0x1"/>
                        <fixedvalue name="intro start" value="0x2"/>
                        <fixedvalue name="main part start" value="0x3"/>
                        <fixedvalue name="outro start" value="0x4"/>
                        <fixedvalue name="outro end" value="0x5"/>
                        <fixedvalue name="verse begins" value="0x6"/>
                        <fixedvalue name="refrain begins" value="0x7"/>
                        <fixedvalue name="interlude" value="0x8"/>
                        <fixedvalue name="theme start" value="0x9"/>
                        <fixedvalue name="variation" value="0xA"/>
                        <fixedvalue name="key change" value="0xB"/>
                        <fixedvalue name="time change" value="0xC"/>
                        <fixedvalue name="unwanted noise" value="0xD"/>
                        <fixedvalue name="not predefined sync 0" value="0xE0"/>
                        <fixedvalue name="not predefined sync 1" value="0xE1"/>
                        <fixedvalue name="not predefined sync 2" value="0xE2"/>
                        <fixedvalue name="not predefined sync 3" value="0xE3"/>
                        <fixedvalue name="not predefined sync 4" value="0xE4"/>
                        <fixedvalue name="not predefined sync 5" value="0xE5"/>
                        <fixedvalue name="not predefined sync 6" value="0xE6"/>
                        <fixedvalue name="not predefined sync 7" value="0xE7"/>
                        <fixedvalue name="not predefined sync 8" value="0xE8"/>
                        <fixedvalue name="not predefined sync 9" value="0xE9"/>
                        <fixedvalue name="not predefined sync A" value="0xEA"/>
                        <fixedvalue name="not predefined sync B" value="0xEB"/>
                        <fixedvalue name="not predefined sync C" value="0xEC"/>
                        <fixedvalue name="not predefined sync D" value="0xED"/>
                        <fixedvalue name="not predefined sync E" value="0xEE"/>
                        <fixedvalue name="not predefined sync F" value="0xEF"/>
                        <fixedvalue name="audio end (start of silence)" value="0xFD"/>
                        <fixedvalue name="audio file ends" value="0xFE"/>
                        <fixedvalue name="one more byte of events follows" value="0xFF"/>
                    </fixedvalues>
                </number>
                <number name="Time stamp" id="495" type="integer" length="4"/>
            </structure>
        </structure>
        <structure name="EQU Frame - Equalisation" id="144" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This is another subjective, alignment frame. It allows the user to predefine an equalisation curve within the audio file. There may only be one &quot;EQU&quot; frame in each tag.</description>
            <string name="Frame ID" id="498" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="EQU" value="EQU"/>
                </fixedvalues>
            </string>
            <number name="Size" id="499" type="integer"/>
            <number name="AdjustmentBits" id="500" type="integer" length="1"/>
            <number name="Increment/decrement" id="501" type="integer" length="1" lengthunit="bit">
                <fixedvalues>
                    <fixedvalue name="decrement" value="0"/>
                    <fixedvalue name="increment" value="1"/>
                </fixedvalues>
            </number>
            <number name="Frequency" id="502" type="integer" length="15" lengthunit="bit"/>
            <number name="Adjustment" id="503" type="integer" length="AdjustmentBits" lengthunit="bit"/>
        </structure>
        <structure name="GEO Frame - General encapsulated object" id="146" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>In this frame any type of file can be encapsulated. After the header, 'Frame size' and 'Encoding' follows 'MIME type' [MIME] and 'Filename' for the encapsulated object, both represented as terminated strings encoded with ISO 8859-1 [ISO-8859-1]. The filename is case sensitive.
Then follows a content description as terminated string, encoded as 'Encoding'. The last thing in the frame is the actual object. The first two strings may be omitted, leaving only their terminations. MIME type is always an ISO-8859-1 text string. There may be more than one &quot;GEO&quot; frame in each tag, but only one with the same content descriptor.</description>
            <string name="Frame ID" id="505" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="GEO" value="GEO"/>
                </fixedvalues>
            </string>
            <number name="Size" id="506" type="integer"/>
            <number name="Text Encoding" id="507" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="ISO-8859-1" value="0"/>
                    <fixedvalue name="Unicode" value="1"/>
                </fixedvalues>
            </number>
            <string name="MIME type" id="508" type="zero-terminated"/>
            <string name="File name" id="509" type="zero-terminated"/>
            <string name="Content description" id="510" type="zero-terminated"/>
            <binary name="Encapsulated object" id="511" length="remaining"/>
        </structure>
        <structure name="IPL Frame - Involved people list" id="148" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>Since there might be a lot of people contributing to an audio file in various ways, such as musicians and technicians, the 'Text information frames' are often insufficient to list everyone involved in a project. The 'Involved people list' is a frame containing the names of those involved, and how they were involved. The body simply contains a terminated string with the involvement directly followed by a terminated string with the involvee followed by a new involvement and so on. There may only be one &quot;IPL&quot; frame in each tag.</description>
            <string name="Frame ID" id="513" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="IPL" value="IPL"/>
                </fixedvalues>
            </string>
            <number name="Size" id="514" type="integer"/>
            <string name="People list strings" id="515" type="zero-terminated"/>
        </structure>
        <structure name="LNK Frame - Linked information" id="150" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>To keep space waste as low as possible this frame may be used to link information from another ID3v2 tag that might reside in another audio file or alone in a binary file. It is recommended that this method is only used when the files are stored on a CD-ROM or other circumstances when the risk of file seperation is low. The frame contains a frame identifier, which is the frame that should be linked into this tag, a URL [URL] field, where a reference to the file where the frame is given, and additional ID data, if needed. Data should be retrieved from the first tag found in the file to which this link points. There may be more than one &quot;LNK&quot; frame in a tag, but only one with the same contents. A linked frame is to be considered as part of the tag and has the same restrictions as if it was a physical part of the tag (i.e. only one &quot;REV&quot; frame allowed, whether it's linked or not).

Frames that may be linked and need no additional data are &quot;IPL&quot;, &quot;MCI&quot;, &quot;ETC&quot;, &quot;LLT&quot;, &quot;STC&quot;, &quot;RVA&quot;, &quot;EQU&quot;, &quot;REV&quot;, &quot;BUF&quot;, the text information frames and the URL link frames.
   
The &quot;TXX&quot;, &quot;PIC&quot;, &quot;GEO&quot;, &quot;CRM&quot; and &quot;CRA&quot; frames may be linked with the content descriptor as additional ID data.
   
The &quot;COM&quot;, &quot;SLT&quot; and &quot;ULT&quot; frames may be linked with three bytes of language descriptor directly followed by a content descriptor as additional ID data.</description>
            <string name="Frame ID" id="517" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="LNK" value="LNK"/>
                </fixedvalues>
            </string>
            <number name="Size" id="518" type="integer"/>
            <string name="Frame identifier" id="519" type="fixed-length"/>
            <string name="URL" id="520" type="zero-terminated"/>
            <string name="Additional ID data" id="521" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="MCI Frame - Music CD Identifier" id="152" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This frame is intended for music that comes from a CD, so that the CD can be identified in databases such as the CDDB [CDDB]. The frame consists of a binary dump of the Table Of Contents, TOC,  from the CD, which is a header of 4 bytes and then 8 bytes/track on the CD making a maximum of 804 bytes. This frame requires a present and valid &quot;TRK&quot; frame. There may only be one &quot;MCI&quot; frame in each tag.</description>
            <string name="Frame ID" id="523" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="MCI" value="MCI"/>
                </fixedvalues>
            </string>
            <number name="Size" id="524" type="integer"/>
            <binary name="CD TOC" id="525" length="remaining"/>
        </structure>
        <structure name="MLL Frame - MPEG location lookup table" id="154" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>To increase performance and accuracy of jumps within a MPEG [MPEG] audio file, frames with timecodes in different locations in the file might be useful. The ID3 frame includes references that the software can use to calculate positions in the file. After the frame header is a descriptor of how much the 'frame counter' should increase for every reference. If this value is two then the first reference points out the second frame, the 2nd reference the 4th frame, the 3rd reference the 6th frame etc. In a similar way the 'bytes between reference' and 'milliseconds between reference' points out bytes and milliseconds respectively.
   
Each reference consists of two parts; a certain number of bits, as defined in 'bits for bytes deviation', that describes the difference between what is said in 'bytes between reference' and the reality and a certain number of bits, as defined in 'bits for milliseconds deviation', that describes the difference between what is said in 'milliseconds between reference' and the reality. The number of bits in every reference, i.e. 'bits for bytes deviation'+'bits for milliseconds deviation', must be a multiple of four. There may only be one &quot;MLL&quot; frame in each tag.</description>
            <string name="Frame ID" id="527" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="MLL" value="MLL"/>
                </fixedvalues>
            </string>
            <number name="Size" id="528" type="integer"/>
            <number name="MPEG frames between reference" id="529" type="integer" length="2"/>
            <number name="Bytes between reference" id="530" type="integer" length="3"/>
            <number name="Milliseconds between reference" id="531" type="integer" length="3"/>
            <number name="Bits for bytes deviation" id="532" type="integer" length="1"/>
            <number name="Bits for milliseconds deviation" id="533" type="integer" length="1"/>
        </structure>
        <structure name="PIC Frame - Attached picture" id="156" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This frame contains a picture directly related to the audio file. Image format is preferably &quot;PNG&quot; [PNG] or &quot;JPG&quot; [JFIF]. Description is a short description of the picture, represented as a terminated textstring. The description has a maximum length of 64 characters, but may be empty. There may be several pictures attached to one file, each in their individual &quot;PIC&quot; frame, but only one with the same content descriptor. There may only be one picture with the picture type declared as picture type $01 and $02 respectively. There is a possibility to put only a link to the image file by using the 'image format' &quot;--&gt;&quot; and having a complete URL [URL] instead of picture data.
The use of linked files should however be used restrictively since there is the risk of separation of files.</description>
            <string name="Frame ID" id="535" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="PIC" value="PIC"/>
                </fixedvalues>
            </string>
            <number name="Size" id="536" type="integer"/>
            <number name="Text Encoding" id="537" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="ISO-8859-1" value="0"/>
                    <fixedvalue name="Unicode" value="1"/>
                </fixedvalues>
            </number>
            <string name="Image format" id="538" type="fixed-length" length="3"/>
            <number name="Picture type" id="539" type="integer" length="1" display="hex">
                <fixedvalues>
                    <fixedvalue name="Other" value="0x0"/>
                    <fixedvalue name="32x32 pixels 'file icon' (PNG only)" value="0x1"/>
                    <fixedvalue name="Other file icon" value="0x2"/>
                    <fixedvalue name="Cover (front)" value="0x3"/>
                    <fixedvalue name="Cover (back)" value="0x4"/>
                    <fixedvalue name="Leaflet page" value="0x5"/>
                    <fixedvalue name="Media (e.g. lable side of CD)" value="0x6"/>
                    <fixedvalue name="Lead artist/lead performer/soloist" value="0x7"/>
                    <fixedvalue name="Artist/performer" value="0x8"/>
                    <fixedvalue name="Conductor" value="0x9"/>
                    <fixedvalue name="Band/Orchestra" value="0xA"/>
                    <fixedvalue name="Composer" value="0xB"/>
                    <fixedvalue name="Lyricist/text writer" value="0xC"/>
                    <fixedvalue name="Recording Location" value="0xD"/>
                    <fixedvalue name="During recording" value="0xE"/>
                    <fixedvalue name="During performance" value="0xF"/>
                    <fixedvalue name="Movie/video screen capture" value="0x10"/>
                    <fixedvalue name="A bright coloured fish" value="0x11"/>
                    <fixedvalue name="Illustration" value="0x12"/>
                    <fixedvalue name="Band/artist logotype" value="0x13"/>
                    <fixedvalue name="Publisher/Studio logotype" value="0x14"/>
                </fixedvalues>
            </number>
            <string name="Description" id="540" type="zero-terminated"/>
            <binary name="Picture data" id="541" length="remaining"/>
        </structure>
        <structure name="POP Frame - Popularimeter" id="158" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The purpose of this frame is to specify how good an audio file is.
Many interesting applications could be found to this frame such as a playlist that features better audiofiles more often than others or it could be used to profile a persons taste and find other 'good' files by comparing people's profiles. The frame is very simple. It contains the email address to the user, one rating byte and a four byte play counter, intended to be increased with one for every time the file is played. The email is a terminated string. The rating is 1-255 where 1 is worst and 255 is best. 0 is unknown. If no personal counter is wanted it may be omitted.  When the counter reaches all one's, one byte is inserted in front of the counter thus making the counter eight bits bigger in the same away as the play counter (&quot;CNT&quot;). 
There may be more than one &quot;POP&quot; frame in each tag, but only one with the same email address.</description>
            <string name="Frame ID" id="543" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="POP" value="POP"/>
                </fixedvalues>
            </string>
            <number name="Size" id="544" type="integer"/>
            <string name="Email to user" id="545" type="zero-terminated"/>
            <number name="Rating" id="546" type="integer" length="1"/>
            <number name="Counter" id="547" type="integer" length="4"/>
        </structure>
        <structure name="REV Frame - Reverb" id="160" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>Yet another subjective one. You may here adjust echoes of different kinds. Reverb left/right is the delay between every bounce in ms. Reverb bounces left/right is the number of bounces that should be made. $FF equals an infinite number of bounces. Feedback is the amount of volume that should be returned to the next echo bounce. $00 is 0%, $FF is 100%. If this value were $7F, there would be 50% volume reduction on the first bounce, yet 50% on the second and so on. Left to left means the sound from the left bounce to be played in the left speaker, while left to right means sound from the left bounce to be played in the right speaker.

'Premix left to right' is the amount of left sound to be mixed in the right before any reverb is applied, where $00 id 0% and $FF is 100%. 'Premix right to left' does the same thing, but right to left. Setting both premix to $FF would result in a mono output (if the reverb is applied symmetric). There may only be one &quot;REV&quot; frame in each tag.</description>
            <string name="Frame ID" id="549" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="REV" value="REV"/>
                </fixedvalues>
            </string>
            <number name="Size" id="550" type="integer"/>
            <number name="Reverb left (ms)" id="551" type="integer" length="2"/>
            <number name="Reverb right (ms)" id="552" type="integer" length="2"/>
            <number name="Reverb bounces, left" id="553" type="integer" length="1"/>
            <number name="Reverb bounces, right" id="554" type="integer" length="1"/>
            <number name="Reverb feedback, left to left" id="555" type="integer" length="1"/>
            <number name="Reverb feedback, left to right" id="556" type="integer" length="1"/>
            <number name="Reverb feedback, right to right" id="557" type="integer" length="1"/>
            <number name="Reverb feedback, right to left" id="558" type="integer" length="1"/>
            <number name="Premix left to right" id="559" type="integer" length="1"/>
            <number name="Premix right to left" id="560" type="integer" length="1"/>
        </structure>
        <structure name="RVA Frame - Relative volume adjustment" id="162" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This is a more subjective function than the previous ones. It allows the user to say how much he wants to increase/decrease the volume on each channel while the file is played. The purpose is to be able to align all files to a reference volume, so that you don't have to change the volume constantly. This frame may also be used to balance adjust the audio. If the volume peak levels are known then this could be described with the 'Peak volume right' and 'Peak volume left' field. If Peakvolume is not known these fields could be left zeroed or completely omitted.  There may only be one &quot;RVA&quot; frame in each tag.</description>
            <string name="Frame ID" id="562" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="RVA" value="RVA"/>
                </fixedvalues>
            </string>
            <number name="Size" id="563" type="integer"/>
            <number name="Increment/decrement" id="564" type="integer" length="4"/>
            <number name="Bits used for volume descr." id="565" type="integer" length="1"/>
            <number name="Relative volume change, right" id="566" type="integer" length="2"/>
            <number name="Relative volume change, left" id="567" type="integer" length="2"/>
            <number name="Peak volume right" id="568" type="integer" length="2"/>
            <number name="Peak volume left" id="569" type="integer" length="2"/>
        </structure>
        <structure name="SLT Frame - Synchronised lyrics/text" id="164" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This is another way of incorporating the words, said or sung lyrics, in the audio file as text, this time, however, in sync with the audio. It might also be used to describing events e.g. occurring on a stage or on the screen in sync with the audio. The header includes a content descriptor, represented with as terminated textstring. If no descriptor is entered, 'Content descriptor' is $00 (00) only.</description>
            <string name="Frame ID" id="571" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="SLT" value="SLT"/>
                </fixedvalues>
            </string>
            <number name="Size" id="572" type="integer"/>
            <number name="Text Encoding" id="573" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="ISO-8859-1" value="0"/>
                    <fixedvalue name="Unicode" value="1"/>
                </fixedvalues>
            </number>
            <string name="Language" id="574" type="fixed-length" length="3"/>
            <number name="Time stamp format" id="575" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Absolute time, 32 bit sized, using MPEG [MPEG] frames as unit" value="1"/>
                    <fixedvalue name="Absolute time, 32 bit sized, using milliseconds as unit" value="2"/>
                </fixedvalues>
            </number>
            <number name="Content type" id="576" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="other" value="0"/>
                    <fixedvalue name="lyrics" value="1"/>
                    <fixedvalue name="text transcription" value="2"/>
                    <fixedvalue name="movement/part name" value="3"/>
                    <fixedvalue name="events" value="4"/>
                    <fixedvalue name="chord" value="5"/>
                </fixedvalues>
            </number>
            <string name="Content descriptor" id="577" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="STC Frame - Synced tempo codes" id="166" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>For a more accurate description of the tempo of a musical piece this frame might be used. After the header follows one byte describing which time stamp format should be used. Then follows one or more tempo  codes. Each tempo code consists of one tempo part and one time part. The tempo is in BPM described with one or two bytes. If the first byte has the value $FF, one more byte follows, which is added to the first giving a range from 2 - 510 BPM, since $00 and $01 is reserved. $00 is used to describe a beat-free time period, which is not the same as a music-free time period. $01 is used to indicate one single beat-stroke followed by a beat-free period.

The tempo descriptor is followed by a time stamp. Every time the tempo in the music changes, a tempo descriptor may indicate this for the player. All tempo descriptors should be sorted in chronological order. The first beat-stroke in a time-period is at the same time as the beat description occurs. There may only be one &quot;STC&quot; frame in each tag.</description>
            <string name="Frame ID" id="579" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="STC" value="STC"/>
                </fixedvalues>
            </string>
            <number name="Size" id="580" type="integer"/>
            <number name="Time stamp format" id="581" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Absolute time, 32 bit sized, using MPEG [MPEG] frames as unit" value="1"/>
                    <fixedvalue name="Absolute time, 32 bit sized, using milliseconds as unit" value="2"/>
                </fixedvalues>
            </number>
            <binary name="Tempo data" id="582" length="remaining"/>
        </structure>
        <structure name="ID3v2.0 Text information frame" id="584" extends="id:255" valueexpression="Encoded String">
            <description>The text information frames are the most important frames, containing information like artist, album and more. There may only be one text information frame of its kind in an tag. If the textstring is followed by a termination ($00 (00)) all the following information should be ignored and not be displayed.</description>
            <string name="Frame ID" id="585" type="fixed-length"/>
            <number name="Size" id="586" type="integer"/>
            <structref name="Encoded String" id="588" structure="id:587"/>
        </structure>
        <structure name="TAL Frame - Album/Movie/Show title" id="168" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Album/Movie/Show title' frame is intended for the title of the recording(/source of sound) which the audio in the file is taken from.</description>
            <string name="Frame ID" id="590" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TAL" value="TAL"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TBP Frame - BPM (Beats Per Minute)" id="170" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>BPM is short for beats per minute, and is easily computed by dividing the number of beats in a musical piece with its length. To get a more accurate result, do the BPM calculation on the main-part only. To acquire best result measure the time between each beat and calculate individual BPM for each beat and use the median value as result. BPM is an integer and represented as a numerical string.</description>
            <string name="Frame ID" id="594" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TBP" value="TBP"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TCM Frame - Composer(s)" id="172" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Composer(s)' frame is intended for the name of the composer(s).
They are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="598" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TCM" value="TCM"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TCO Frame - Content type" id="174" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The content type, which previously (in ID3v1.1, see appendix A) was stored as a one byte numeric value only, is now a numeric string. You may use one or several of the types as ID3v1.1 did or, since the category list would be impossible to maintain with accurate and up to date categories, define your own.

References to the ID3v1 genres can be made by, as first byte, enter &quot;(&quot; followed by a number from the genres list (section A.3.) and ended with a &quot;)&quot; character. This is optionally followed by a refinement, e.g. &quot;(21)&quot; or &quot;(4)Eurodisco&quot;. Several references can be made in the same frame, e.g. &quot;(51)(39)&quot;. If the refinement should begin with a &quot;(&quot; character it should be replaced with &quot;((&quot;, e.g. &quot;((I can figure out any genre)&quot; or &quot;(55)((I think...)&quot;. The following new content types is defined in ID3v2 and is implemented in the same way as the numerig content types, e.g. &quot;(RX)&quot;.
   
  RX  Remix
  CR  Cover</description>
            <string name="Frame ID" id="602" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TCO" value="TCO"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TCR Frame - Copyright message" id="176" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Copyright message' frame, which must begin with a year and a space character (making five characters), is intended for the copyright holder of the original sound, not the audio file itself. The absence of this frame means only that the copyright information is unavailable or has been removed, and must not be interpreted to mean that the sound is public domain. Every time this field is displayed the field must be preceded with &quot;Copyright &quot; (C) &quot; &quot;, where (C) is one character showing a C in a circle.</description>
            <string name="Frame ID" id="606" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TCR" value="TCR"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDA Frame - Date" id="178" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Date' frame is a numeric string in the DDMM format containing the date for the recording. This field is always four characters long.</description>
            <string name="Frame ID" id="610" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDA" value="TDA"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDY Frame - Playlist delay" id="180" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Playlist delay' defines the numbers of milliseconds of silence between every song in a playlist. The player should use the &quot;ETC&quot; frame, if present, to skip initial silence and silence at the end of the audio to match the 'Playlist delay' time. The time is represented as a numeric string.</description>
            <string name="Frame ID" id="614" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDY" value="TDY"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TEN Frame - Encoded by" id="182" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Encoded by' frame contains the name of the person or organisation that encoded the audio file. This field may contain a copyright message, if the audio file also is copyrighted by the encoder.</description>
            <string name="Frame ID" id="618" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TEN" value="TEN"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TFT Frame - File type" id="184" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'File type' frame indicates which type of audio this tag defines.
The following type and refinements are defined:
   
     MPG    MPEG Audio
       /1     MPEG 2 layer I
       /2     MPEG 2 layer II
       /3     MPEG 2 layer III
       /2.5   MPEG 2.5
       /AAC   Advanced audio compression
     
but other types may be used, not for these types though. This is used in a similar way to the predefined types in the &quot;TMT&quot; frame, but without parenthesis. If this frame is not present audio type is assumed to be &quot;MPG&quot;.</description>
            <string name="Frame ID" id="622" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TFT" value="TFT"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TIM Frame - Time" id="186" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Time' frame is a numeric string in the HHMM format containing the time for the recording. This field is always four characters long.</description>
            <string name="Frame ID" id="626" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TIM" value="TIM"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TKE Frame - Initial key" id="188" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Initial key' frame contains the musical key in which the sound starts. It is represented as a string with a maximum length of three characters. The ground keys are represented with &quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;, &quot;F&quot; and &quot;G&quot; and halfkeys represented with &quot;b&quot; and &quot;#&quot;. Minor is represented as &quot;m&quot;. Example &quot;Cbm&quot;. Off key is represented with an &quot;o&quot; only.</description>
            <string name="Frame ID" id="630" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TKE" value="TKE"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TLA Frame - Language(s)" id="190" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Language(s)' frame should contain the languages of the text or lyrics in the audio file. The language is represented with three characters according to ISO-639-2. If more than one language is used in the text their language codes should follow according to their usage.</description>
            <string name="Frame ID" id="634" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TLA" value="TLA"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TLE Frame - Length" id="192" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Length' frame contains the length of the audiofile in milliseconds, represented as a numeric string.</description>
            <string name="Frame ID" id="638" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TLE" value="TLE"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TMT Frame - Media type" id="194" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Media type' frame describes from which media the sound originated. This may be a textstring or a reference to the predefined media types found in the list below. References are made within &quot;(&quot; and &quot;)&quot; and are optionally followed by a text refinement, e.g. &quot;(MC) with four channels&quot;. If a text refinement should begin with a &quot;(&quot; character it should be replaced with &quot;((&quot; in the same way as in the &quot;TCO&quot; frame. Predefined refinements is appended after the media type, e.g. &quot;(CD/S)&quot; or &quot;(VID/PAL/VHS)&quot;.</description>
            <string name="Frame ID" id="642" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TMT" value="TMT"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOA Frame - Original artist(s)/performer(s)" id="196" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Original artist(s)/performer(s)' frame is intended for the performer(s) of the original recording, if for example the music in the file should be a cover of a previously released song. The performers are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="646" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOA" value="TOA"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOF Frame - Original filename" id="198" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Original filename' frame contains the preferred filename for the file, since some media doesn't allow the desired length of the filename. The filename is case sensitive and includes its suffix.</description>
            <string name="Frame ID" id="650" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOF" value="TOF"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOL Frame - Original Lyricist(s)/text writer(s)" id="200" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Original Lyricist(s)/text writer(s)' frame is intended for the text writer(s) of the original recording, if for example the music in the file should be a cover of a previously released song. The text writers are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="654" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOL" value="TOL"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOR Frame - Original release year" id="202" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Original release year' frame is intended for the year when the original recording, if for example the music in the file should be a cover of a previously released song, was released. The field is formatted as in the &quot;TDY&quot; frame.</description>
            <string name="Frame ID" id="658" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOR" value="TOR"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOT Frame - Original album/Movie/Show title" id="204" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Original album/Movie/Show title' frame is intended for the title of the original recording(/source of sound), if for example the music in the file should be a cover of a previously released song.</description>
            <string name="Frame ID" id="662" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOT" value="TOT"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TP1 Frame - Lead artist(s)/Lead performer(s)/Soloist(s)/Performing group" id="206" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Lead artist(s)/Lead performer(s)/Soloist(s)/Performing group' is used for the main artist(s). They are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="666" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TP1" value="TP1"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TP2 Frame - Band/Orchestra/Accompaniment" id="208" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Band/Orchestra/Accompaniment' frame is used for additional information about the performers in the recording.</description>
            <string name="Frame ID" id="670" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TP2" value="TP2"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TP3 Frame - Conductor" id="210" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Conductor' frame is used for the name of the conductor.</description>
            <string name="Frame ID" id="674" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TP3" value="TP3"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TP4 Frame - Interpreted, remixed, or otherwise modified by" id="212" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Interpreted, remixed, or otherwise modified by' frame contains more information about the people behind a remix and similar interpretations of another existing piece.</description>
            <string name="Frame ID" id="678" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TP4" value="TP4"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPA Frame - Part of a set" id="214" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Part of a set' frame is a numeric string that describes which part of a set the audio came from. This frame is used if the source  described in the &quot;TAL&quot; frame is divided into several mediums, e.g. a double CD. The value may be extended with a &quot;/&quot; character and a numeric string containing the total number of parts in the set. E.g. &quot;1/2&quot;.</description>
            <string name="Frame ID" id="682" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPA" value="TPA"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPB Frame - Publisher" id="216" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Publisher' frame simply contains the name of the label or publisher.</description>
            <string name="Frame ID" id="686" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPB" value="TPB"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TRC Frame - ISRC (International Standard Recording Code)" id="218" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'ISRC' frame should contian the International Standard Recording Code [ISRC].</description>
            <string name="Frame ID" id="690" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TRC" value="TRC"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TRD Frame - Recording dates" id="220" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Recording dates' frame is a intended to be used as complement to the &quot;TYE&quot;, &quot;TDA&quot; and &quot;TIM&quot; frames. E.g. &quot;4th-7th June, 12th June&quot; in combination with the &quot;TYE&quot; frame.</description>
            <string name="Frame ID" id="694" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TRD" value="TRD"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TRK Frame - Track number/Position in set" id="222" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Track number/Position in set' frame is a numeric string containing the order number of the audio-file on its original recording. This may be extended with a &quot;/&quot; character and a numeric string containing the total numer of tracks/elements on the original recording. E.g. &quot;4/9&quot;.</description>
            <string name="Frame ID" id="698" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TRK" value="TRK"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSA Frame - Album Sort" id="224" extends="id:584">
            <string name="Frame ID" id="702" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSA" value="TSA"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TS2 Frame - Album Artist Sort" id="226" extends="id:584">
            <string name="Frame ID" id="706" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TS2" value="TS2"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSC Frame - Composer Sort" id="228" extends="id:584">
            <string name="Frame ID" id="710" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSC" value="TSC"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSI Frame - Size" id="230" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Size' frame contains the size of the audiofile in bytes excluding the tag, represented as a numeric string.</description>
            <string name="Frame ID" id="714" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSI" value="TSI"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSP Frame - Artist Sort" id="232" extends="id:584">
            <string name="Frame ID" id="718" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSP" value="TSP"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSS Frame - Software/hardware and settings used for encoding" id="234" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Software/hardware and settings used for encoding' frame includes the used audio encoder and its settings when the file was encoded. Hardware refers to hardware encoders, not the computer on which a program was run.</description>
            <string name="Frame ID" id="722" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSS" value="TSS"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TST Frame - Title Sort" id="236" extends="id:584">
            <string name="Frame ID" id="726" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TST" value="TST"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TT1 Frame - Content group description" id="238" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Content group description' frame is used if the sound belongs to a larger category of sounds/music. For example, classical music is often sorted in different musical sections (e.g. &quot;Piano Concerto&quot;, &quot;Weather - Hurricane&quot;).</description>
            <string name="Frame ID" id="730" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TT1" value="TT1"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TT2 Frame - Title/Songname/Content description" id="240" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Title/Songname/Content description' frame is the actual name of the piece (e.g. &quot;Adagio&quot;, &quot;Hurricane Donna&quot;).</description>
            <string name="Frame ID" id="734" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TT2" value="TT2"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TT3 Frame - Subtitle/Description refinement" id="242" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Subtitle/Description refinement' frame is used for information directly related to the contents title (e.g. &quot;Op. 16&quot; or &quot;Performed live at wembley&quot;).</description>
            <string name="Frame ID" id="738" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TT3" value="TT3"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TXT Frame - Lyricist(s)/text writer(s)" id="244" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Lyricist(s)/text writer(s)' frame is intended for the writer(s) of the text or lyrics in the recording. They are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="742" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TXT" value="TXT"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TXX Frame - User defined text information frame" id="246" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no" valueexpression="Value">
            <description>This frame is intended for one-string text information concerning the audiofile in a similar way to the other &quot;T&quot;xx frames. The frame body consists of a description of the string, represented as a terminated string, followed by the actual string. There may be more than one &quot;TXX&quot; frame in each tag, but only one with the same description.</description>
            <string name="Frame ID" id="746" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TXX" value="TXX"/>
                </fixedvalues>
            </string>
            <number name="Size" id="747" type="integer"/>
            <number name="Text encoding" id="748" type="integer" length="1"/>
            <string name="Description" id="749" type="zero-terminated"/>
            <string name="Value" id="750" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="TYE Frame - Year" id="248" extends="id:584" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Year' frame is a numeric string with a year of the recording.
This frames is always four characters long (until the year 10000).</description>
            <string name="Frame ID" id="752" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TYE" value="TYE"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="UFI Frame - Unique file identifier" id="250" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>This frame's purpose is to be able to identify the audio file in a database that may contain more information relevant to the content.
Since standardisation of such a database is beyond this document, all frames begin with a null-terminated string with a URL [URL] containing an email address, or a link to a location where an email address can be found, that belongs to the organisation responsible for this specific database implementation. Questions regarding the database should be sent to the indicated email address. The URL should not be used for the actual database queries. If a $00 is found directly after the 'Frame size' the whole frame should be ignored, and preferably be removed. The 'Owner identifier' is then followed by the actual identifier, which may be up to 64 bytes. There may be more than one &quot;UFI&quot; frame in a tag, but only one with the same 'Owner identifier'.</description>
            <string name="Frame ID" id="756" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="UFI" value="UFI"/>
                </fixedvalues>
            </string>
            <number name="Size" id="757" type="integer"/>
            <string name="Owner Identifier" id="758" type="zero-terminated"/>
            <binary name="Identifier" id="759" length="remaining"/>
        </structure>
        <structure name="ULT Frame - Unsychronised lyrics/text transcription" id="252" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no" valueexpression="Lyrics/text">
            <description>This frame contains the lyrics of the song or a text transcription of other vocal activities. The head includes an encoding descriptor and a content descriptor. The body consists of the actual text. The 'Content descriptor' is a terminated string. If no descriptor is entered, 'Content descriptor' is $00 (00) only. Newline characters are allowed in the text. Maximum length for the descriptor is 64 bytes. There may be more than one lyrics/text frame in each tag, but only one with the same language and content descriptor.</description>
            <string name="Frame ID" id="761" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="ULT" value="ULT"/>
                </fixedvalues>
            </string>
            <number name="Size" id="762" type="integer"/>
            <number name="Text Encoding" id="763" type="integer" length="1"/>
            <string name="Language" id="764" type="fixed-length" length="3"/>
            <string name="Content descriptor" id="765" type="zero-terminated"/>
            <string name="Lyrics/text" id="766" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="ID3v2.0 URL link frame" id="768" extends="id:255" valueexpression="URL">
            <description>With these frames dynamic data such as webpages with touring information, price information or plain ordinary news can be added to the tag. There may only be one URL [URL] link frame of its kind in an tag, except when stated otherwise in the frame description. If the textstring is followed by a termination ($00 (00)) all the following information should be ignored and not be displayed.</description>
            <string name="Frame ID" id="769" type="fixed-length">
                <fixedvalues/>
            </string>
            <number name="Size" id="770" type="integer"/>
            <string name="URL" id="771" type="zero-terminated"/>
        </structure>
        <structure name="WAF Frame - Official audio file webpage" id="773" extends="id:768" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Official audio file webpage' frame is a URL pointing at a file specific webpage.</description>
            <string name="Frame ID" id="774" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WAF" value="WAF"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WAR Frame - Official artist/performer webpage" id="778" extends="id:768" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Official artist/performer webpage' frame is a URL pointing at the artists official webpage. There may be more than one &quot;WAR&quot; frame in a tag if the audio contains more than one performer.</description>
            <string name="Frame ID" id="779" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WAR" value="WAR"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WAS Frame - Official audio source webpage" id="783" extends="id:768" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Official audio source webpage' frame is a URL pointing at the official webpage for the source of the audio file, e.g. a movie.</description>
            <string name="Frame ID" id="784" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WAS" value="WAS"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WCM Frame - Commercial information" id="788" extends="id:768" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Commercial information' frame is a URL pointing at a webpage with information such as where the album can be bought. There may be more than one &quot;WCM&quot; frame in a tag.</description>
            <string name="Frame ID" id="789" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WCM" value="WCM"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WCP Frame - Copyright/Legal information" id="793" extends="id:768" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Copyright/Legal information' frame is a URL pointing at a webpage where the terms of use and ownership of the file is described.</description>
            <string name="Frame ID" id="794" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WCP" value="WCP"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WPB Frame - Publishers official webpage" id="798" extends="id:768" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <description>The 'Publishers official webpage' frame is a URL pointing at the official web page for the publisher.</description>
            <string name="Frame ID" id="799" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WPB" value="WPB"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WXX Frame - User defined URL link frame" id="803" extends="id:255" encoding="ISO_8859-1:1987" endian="big" signed="no" valueexpression="URL">
            <description>This frame is intended for URL [URL] links concerning the audiofile in a similar way to the other &quot;W&quot;xx frames. The frame body consists of a description of the string, represented as a terminated string, followed by the actual URL. The URL is always encoded with ISO-8859-1 [ISO-8859-1]. There may be more than one &quot;WXX&quot; frame in each tag, but only one with the same description.</description>
            <string name="Frame ID" id="804" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WXX" value="WXX"/>
                </fixedvalues>
            </string>
            <number name="Size" id="805" type="integer"/>
            <number name="Text encoding" id="806" type="integer" length="1"/>
            <string name="Description" id="807" type="zero-terminated"/>
            <string name="URL" id="808" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="ID3v2.3 Frame" id="453" length="Size + 10" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <string name="Frame ID" mustmatch="yes" id="810" fillcolor="D4FB78" type="fixed-length" length="4"/>
            <number name="Size" id="811" fillcolor="73FDFF" type="integer" length="4"/>
            <number name="Tag alter preservation" id="812" type="integer" length="1" lengthunit="bit">
                <description>This flag tells the software what to do with this frame if it is unknown and the tag is altered in any way. This applies to all kinds of alterations, including adding more padding and reordering the frames.</description>
                <fixedvalues>
                    <fixedvalue name="Frame should be preserved" value="0"/>
                    <fixedvalue name="Frame should be discarded" value="1"/>
                </fixedvalues>
            </number>
            <number name="File alter preservation" id="813" type="integer" length="1" lengthunit="bit">
                <description>This flag tells the software what to do with this frame if it is unknown and the file, excluding the tag, is altered. This does not apply when the audio is completely replaced with other audio data.</description>
                <fixedvalues>
                    <fixedvalue name="Frame should be preserved" value="0"/>
                    <fixedvalue name="Frame should be discarded" value="1"/>
                </fixedvalues>
            </number>
            <number name="Read only" id="814" type="integer" length="1" lengthunit="bit">
                <description>This flag, if set, tells the software that the contents of this frame is intended to be read only. Changing the contents might break something, e.g. a signature. If the contents are changed, without knowledge in why the frame was flagged read only and without taking the proper means to compensate, e.g. recalculating the signature, the bit should be cleared.</description>
                <fixedvalues>
                    <fixedvalue name="Not read only" value="0"/>
                    <fixedvalue name="Read only" value="1"/>
                </fixedvalues>
            </number>
            <number name="Unused Flags" id="815" type="integer" length="5" lengthunit="bit"/>
            <number name="Compression" id="816" type="integer" length="1" lengthunit="bit">
                <description>This flag indicates whether or not the frame is compressed</description>
                <fixedvalues>
                    <fixedvalue name="Frame is not compressed" value="0"/>
                    <fixedvalue name="Frame is compressed" value="1"/>
                </fixedvalues>
            </number>
            <number name="Encryption" id="817" type="integer" length="1" lengthunit="bit">
                <description>This flag indicates wether or not the frame is enrypted. If set one byte indicating with which method it was encrypted will be appended to the frame header.</description>
                <fixedvalues>
                    <fixedvalue name="Frame is not encrypted" value="0"/>
                    <fixedvalue name="Frame is encrypted" value="1"/>
                </fixedvalues>
            </number>
            <number name="Grouping identity" id="818" type="integer" length="1" lengthunit="bit">
                <description>This flag indicates whether or not this frame belongs in a group with other frames. If set a group identifier byte is added to the frame header. Every frame with the same group identifier belongs to the same group.
</description>
                <fixedvalues>
                    <fixedvalue name="Frame does not contain group information" value="0"/>
                    <fixedvalue name="Frame contains group information" value="1"/>
                </fixedvalues>
            </number>
            <number name="Unused Flags 2" id="819" type="integer" length="5" lengthunit="bit"/>
        </structure>
        <structure name="AENC Frame - Audio encryption" id="271" extends="id:453">
            <description>This frame indicates if the actual audio stream is encrypted, and by whom. Since standardization of such encryption scheme is beyond this document, all &quot;AENC&quot; frames begin with a terminated string with a URL containing an email address, or a link to a location where an email address can be found, that belongs to the organisation responsible for this specific encrypted audio file. Questions regarding the encrypted audio should be sent to the email address specified. If a $00 is found directly after the 'Frame size' and the audiofile indeed is encrypted, the whole file may be considered useless.

After the 'Owner identifier', a pointer to an unencrypted part of the audio can be specified. The 'Preview start' and 'Preview length' is described in frames. If no part is unencrypted, these fields should be left zeroed. After the 'preview length' field follows optionally a datablock required for decryption of the audio. There may be more than one &quot;AENC&quot; frames in a tag, but only one with the same 'Owner identifier'.</description>
            <string name="Frame ID" id="821" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="AENC" value="AENC"/>
                </fixedvalues>
            </string>
            <number name="Size" id="822" type="integer"/>
            <string name="Owner identifier" id="831" type="zero-terminated"/>
            <number name="Preview start" id="832" type="integer" length="2"/>
            <number name="Preview length" id="833" type="integer" length="2"/>
            <binary name="Encryption info" id="834" length="remaining"/>
        </structure>
        <structure name="APIC Frame - Attached picture" id="273" extends="id:453">
            <description>This frame contains a picture directly related to the audio file. Image format is the MIME type and subtype for the image. In the event that the MIME media type name is omitted, &quot;image/&quot; will be implied. The &quot;image/png&quot; or &quot;image/jpeg&quot; picture format should be used when interoperability is wanted. Description is a short description of the picture, represented as a terminated textstring. The description has a maximum length of 64 characters, but may be empty. There may be several pictures attached to one file, each in their individual &quot;APIC&quot; frame, but only one with the same content descriptor. There may only be one picture with the picture type declared as picture type $01 and $02 respectively. There is the possibility to put only a link to the image file by using the 'MIME type' &quot;--&gt;&quot; and having a complete URL instead of picture data. The use of linked files should however be used sparingly since there is the risk of separation of files.</description>
            <string name="Frame ID" id="836" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="APIC" value="APIC"/>
                </fixedvalues>
            </string>
            <number name="Size" id="837" type="integer"/>
            <number name="Text encoding" id="846" type="integer" length="1"/>
            <string name="MIME type" id="847" type="zero-terminated"/>
            <number name="Picture type" id="848" type="integer" length="1" display="hex">
                <fixedvalues>
                    <fixedvalue name="Other" value="0x0"/>
                    <fixedvalue name="32x32 pixels 'file icon' (PNG only)" value="0x1"/>
                    <fixedvalue name="Other file icon" value="0x2"/>
                    <fixedvalue name="Cover (front)" value="0x3"/>
                    <fixedvalue name="Cover (back)" value="0x4"/>
                    <fixedvalue name="Leaflet page" value="0x5"/>
                    <fixedvalue name="Media (e.g. lable side of CD)" value="0x6"/>
                    <fixedvalue name="Lead artist/lead performer/soloist" value="0x7"/>
                    <fixedvalue name="Artist/performer" value="0x8"/>
                    <fixedvalue name="Conductor" value="0x9"/>
                    <fixedvalue name="Band/Orchestra" value="0xA"/>
                    <fixedvalue name="Composer" value="0xB"/>
                    <fixedvalue name="Lyricist/text writer" value="0xC"/>
                    <fixedvalue name="Recording Location" value="0xD"/>
                    <fixedvalue name="During recording" value="0xE"/>
                    <fixedvalue name="During performance" value="0xF"/>
                    <fixedvalue name="Movie/video screen capture" value="0x10"/>
                    <fixedvalue name="A bright coloured fish" value="0x11"/>
                    <fixedvalue name="Illustration" value="0x12"/>
                    <fixedvalue name="Band/artist logotype" value="0x13"/>
                    <fixedvalue name="Publisher/Studio logotype" value="0x14"/>
                </fixedvalues>
            </number>
            <string name="Description" id="849" type="zero-terminated"/>
            <binary name="Image Data" id="850" length="remaining"/>
        </structure>
        <structure name="ASPI Frame - Audio seek point index" id="275" extends="id:453">
            <description>Audio files with variable bit rates are intrinsically difficult to deal with in the case of seeking within the file. The ASPI frame makes seeking easier by providing a list a seek points within the audio file. The seek points are a fractional offset within the audio data, providing a starting point from which to find an appropriate point to start decoding. The presence of an ASPI frame requires the existence of a TLEN frame, indicating the duration of the file in milliseconds. There may only be one 'audio seek point index' frame in a tag.

'Indexed data start' is a byte offset from the beginning of the file. 'Indexed data length' is the byte length of the audio data being indexed. 'Number of index points' is the number of index points, as the name implies. The recommended number is 100. 'Bits per index point' is 8 or 16, depending on the chosen precision. 8 bits works well for short files (less than 5 minutes of audio), while 16 bits is advantageous for long files. 'Fraction at index' is the numerator of the fraction representing a relative position in the data. The denominator is 2 to the power of b.

Here are the algorithms to be used in the calculation. The known data must be the offset of the start of the indexed data (S), the offset of the end of the indexed data (E), the number of index points (N), the offset at index i (Oi). We calculate the fraction at index i (Fi).

Oi is the offset of the frame whose start is soonest after the point for which the time offset is (i/N * duration).

The frame data should be calculated as follows:

     Fi = Oi/L * 2^b    (rounded down to the nearest integer)

Offset calculation should be calculated as follows from data in the frame:

     Oi = (Fi/2^b)*L    (rounded up to the nearest integer)</description>
            <string name="Frame ID" id="852" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="ASPI" value="ASPI"/>
                </fixedvalues>
            </string>
            <number name="Size" id="853" type="integer"/>
            <number name="Indexed data start (S)" id="862" type="integer" length="4"/>
            <number name="Indexed data length (L)" id="863" type="integer" length="4"/>
            <number name="NumberOfIndexPoints" id="864" type="integer" length="2"/>
            <number name="BitsPerIndexPoint" id="865" type="integer" length="1"/>
            <number name="Fraction at index (Fi)" id="866" repeatmin="0" repeatmax="NumberOfIndexPoints" type="integer" length="BitsPerIndexPoint" lengthunit="bit"/>
        </structure>
        <structure name="COMM Frame - Comments" id="277" extends="id:453" valueexpression="The actual text">
            <description>This frame is indended for any kind of full text information that does not fit in any other frame. It consists of a frame header followed by encoding, language and content descriptors and is ended with the actual comment as a text string. Newline characters are allowed in the comment text string. There may be more than one comment frame in each tag, but only one with the same language and content descriptor.</description>
            <string name="Frame ID" id="868" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="COMM" value="COMM"/>
                </fixedvalues>
            </string>
            <number name="Size" id="869" type="integer"/>
            <number name="Text encoding" id="878" type="integer" length="1"/>
            <string name="Language" id="879" type="fixed-length" length="3"/>
            <string name="Short content description" id="880" type="zero-terminated"/>
            <string name="The actual text" id="881" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="COMR Frame - Commercial frame" id="279" extends="id:453">
            <description>This frame enables several competing offers in the same tag by bundling all needed information. That makes this frame rather complex but it's an easier solution than if one tries to achieve the same result with several frames. The frame begins, after the frame ID, size and encoding fields, with a price string field. A price is constructed by one three character currency code, encoded according to ISO-4217 alphabetic currency code, followed by a numerical value where &quot;.&quot; is used as decimal seperator. In the price string several prices may be concatenated, seperated by a &quot;/&quot; character, but there may only be one currency of each type.
The price string is followed by an 8 character date string in the format YYYYMMDD, describing for how long the price is valid. After that is a contact URL, with which the user can contact the seller, followed by a one byte 'received as' field.

Next follows a terminated string with the name of the seller followed by a terminated string with a short description of the product. The last thing is the ability to include a company logotype. The first of them is the 'Picture MIME type' field containing information about which picture format is used. In the event that the MIME media type name is omitted, &quot;image/&quot; will be implied. Currently only &quot;image/png&quot; and &quot;image/jpeg&quot; are allowed. This format string is followed by the binary picture data. This two last fields may be omitted if no picture is to attach.</description>
            <string name="Frame ID" id="883" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="COMR" value="COMR"/>
                </fixedvalues>
            </string>
            <number name="Size" id="884" type="integer"/>
            <number name="Text encoding" id="893" type="integer" length="1"/>
            <string name="Price string" id="894" type="zero-terminated"/>
            <string name="Valid until" id="895" type="fixed-length" length="8"/>
            <string name="Contact URL" id="896" type="zero-terminated"/>
            <number name="Received as" id="897" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Other" value="0"/>
                    <fixedvalue name="Standard CD album with other songs" value="1"/>
                    <fixedvalue name="Compressed audio on CD" value="2"/>
                    <fixedvalue name="File over the Internet" value="3"/>
                    <fixedvalue name="Stream over the Internet" value="4"/>
                    <fixedvalue name="As note sheets" value="5"/>
                    <fixedvalue name="As note sheets in a book with other sheets" value="6"/>
                    <fixedvalue name="Music on other media" value="7"/>
                    <fixedvalue name="Non-musical merchandise" value="8"/>
                </fixedvalues>
            </number>
            <string name="Seller" id="898" type="zero-terminated"/>
            <string name="Description" id="899" type="zero-terminated"/>
            <string name="Picture MIME type" id="900" repeatmin="0" type="zero-terminated"/>
            <binary name="Picture data" id="901" repeatmin="0" length="remaining"/>
        </structure>
        <structure name="ENCR Frame - Encryption method registration" id="281" extends="id:453">
            <description>To identify with which method a frame has been encrypted the encryption method must be registered in the tag with this frame. The 'Owner identifier' is a null-terminated string with a URL containing an email address, or a link to a location where an email address can be found, that belongs to the organisation responsible for this specific encryption method. Questions regarding the encryption method should be sent to the indicated email address. The 'Method symbol' contains a value that is associated with this method throughout the whole tag. Values below $80 are reserved. The 'Method symbol' may optionally be followed by encryption specific data. There may be several &quot;ENCR&quot; frames in a tag but only one containing the same symbol and only one containing the same owner identifier. The method must be used somewhere in the tag.</description>
            <string name="Frame ID" id="903" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="ENCR" value="ENCR"/>
                </fixedvalues>
            </string>
            <number name="Size" id="904" type="integer"/>
            <string name="Owner identifier" id="913" type="zero-terminated"/>
            <number name="Method symbol" id="914" type="integer" length="1"/>
            <binary name="Encryption data" id="915" length="remaining"/>
        </structure>
        <structure name="EQUA Frame - Equalization" id="283" extends="id:453">
            <description>This is another subjective, alignment frame. It allows the user to predefine an equalisation curve within the audio file. There may only be one &quot;EQUA&quot; frame in each tag.

The 'adjustment bits' field defines the number of bits used for representation of the adjustment. This is normally $10 (16 bits) for MPEG 2 layer I, II and III and MPEG 2.5. This value may not be $00.
This is followed by 2 bytes + ('adjustment bits' rounded up to the nearest byte) for every equalisation band in the following format, giving a frequency range of 0 - 32767Hz

The increment/decrement bit is 1 for increment and 0 for decrement. The equalisation bands should be ordered increasingly with reference to frequency. All frequencies don't have to be declared. The equalisation curve in the reading software should be interpolated between the values in this frame. Three equal adjustments for three subsequent frequencies. A frequency should only be described once in the frame.</description>
            <string name="Frame ID" id="917" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="EQUA" value="EQUA"/>
                </fixedvalues>
            </string>
            <number name="Size" id="918" type="integer"/>
            <number name="AdjustmentBits" id="927" type="integer" length="1"/>
            <number name="Increment/decrement" id="928" type="integer" length="1" lengthunit="bit"/>
            <number name="Frequency" id="929" type="integer" length="15" lengthunit="bit"/>
            <number name="Adjustment" id="930" type="integer" length="AdjustmentBits" lengthunit="bit"/>
        </structure>
        <structure name="EQU2 Frame - Equalisation (2)" id="285" extends="id:453">
            <description>This is another subjective, alignment frame. It allows the user to predefine an equalisation curve within the audio file. There may be more than one &quot;EQU2&quot; frame in each tag, but only one with the same identification string.

The 'interpolation method' describes which method is preferred when an interpolation between the adjustment point that follows. The following methods are currently defined:
     $00  Band
          No interpolation is made. A jump from one adjustment level to
          another occurs in the middle between two adjustment points.
     $01  Linear
          Interpolation between adjustment points is linear.

The 'identification' string is used to identify the situation and/or device where this adjustment should apply. The following is then repeated for every adjustment point

     Frequency          $xx xx
     Volume adjustment  $xx xx

The frequency is stored in units of 1/2 Hz, giving it a range from 0 to 32767 Hz.

The volume adjustment is encoded as a fixed point decibel value, 16 bit signed integer representing (adjustment*512), giving +/- 64 dB with a precision of 0.001953125 dB. E.g. +2 dB is stored as $04 00 and -2 dB is $FC 00.

Adjustment points should be ordered by frequency and one frequency should only be described once in the frame.</description>
            <string name="Frame ID" id="932" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="EQU2" value="EQU2"/>
                </fixedvalues>
            </string>
            <number name="Size" id="933" type="integer"/>
            <number name="Interpolation method" id="942" type="integer" length="1">
                <description>The 'interpolation method' describes which method is preferred when an interpolation between the adjustment point that follows. The following methods are currently defined:

     $00  Band
          No interpolation is made. A jump from one adjustment level to
          another occurs in the middle between two adjustment points.
     $01  Linear
          Interpolation between adjustment points is linear.</description>
                <fixedvalues>
                    <fixedvalue name="Band" value="0"/>
                    <fixedvalue name="Linear" value="1"/>
                </fixedvalues>
            </number>
            <string name="Identification" id="943" type="zero-terminated">
                <description>The 'identification' string is used to identify the situation and/or device where this adjustment should apply.</description>
            </string>
            <structure name="Adjustment point" id="944" repeatmin="0" repeatmax="-1">
                <description>Adjustment points should be ordered by frequency and one frequency should only be described once in the frame.</description>
                <number name="Frequency" id="945" type="integer" length="2">
                    <description>The frequency is stored in units of 1/2 Hz, giving it a range from 0 to 32767 Hz.</description>
                </number>
                <number name="Volume adjustment" id="946" type="integer" length="2">
                    <description>The volume adjustment is encoded as a fixed point decibel value, 16 bit signed integer representing (adjustment*512), giving +/- 64 dB with a precision of 0.001953125 dB. E.g. +2 dB is stored as $04 00 and -2 dB is $FC 00.</description>
                </number>
            </structure>
        </structure>
        <structure name="ETCO Frame - Event timing codes" id="287" extends="id:453">
            <description>This frame allows synchronisation with key events in a song or sound.

Terminating the start events such as &quot;intro start&quot; is not required. The 'Not predefined sync's ($E0-EF) are for user events. You might want to synchronise your music to something, like setting of an explosion on-stage, turning on your screensaver etc.
There may only be one &quot;ETCO&quot; frame in each tag.</description>
            <string name="Frame ID" id="949" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="ETCO" value="ETCO"/>
                </fixedvalues>
            </string>
            <number name="Size" id="950" type="integer"/>
            <number name="Time stamp format" id="959" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Absolute time, 32 bit sized, using MPEG frames as unit1" value="1"/>
                    <fixedvalue name="Absolute time, 32 bit sized, using milliseconds as unit" value="2"/>
                </fixedvalues>
            </number>
            <structure name="Key event" id="960" repeatmin="0" repeatmax="-1">
                <number name="Type" id="961" type="integer" length="1" display="hex">
                    <fixedvalues>
                        <fixedvalue name="padding (has no meaning)" value="0x0"/>
                        <fixedvalue name="end of initial silence" value="0x1"/>
                        <fixedvalue name="intro start" value="0x2"/>
                        <fixedvalue name="mainpart start" value="0x3"/>
                        <fixedvalue name="outro start" value="0x4"/>
                        <fixedvalue name="outro end" value="0x5"/>
                        <fixedvalue name="verse start" value="0x6"/>
                        <fixedvalue name="refrain start" value="0x7"/>
                        <fixedvalue name="interlude start" value="0x8"/>
                        <fixedvalue name="theme start" value="0x9"/>
                        <fixedvalue name="variation start" value="0xA"/>
                        <fixedvalue name="key change" value="0xB"/>
                        <fixedvalue name="time change" value="0xC"/>
                        <fixedvalue name="momentary unwanted noise (Snap, Crackle &amp; Pop)" value="0xD"/>
                        <fixedvalue name="sustained noise" value="0xE"/>
                        <fixedvalue name="sustained noise end" value="0xF"/>
                        <fixedvalue name="intro end" value="0x10"/>
                        <fixedvalue name="mainpart end" value="0x11"/>
                        <fixedvalue name="verse end" value="0x12"/>
                        <fixedvalue name="refrain end" value="0x13"/>
                        <fixedvalue name="theme end" value="0x14"/>
                        <fixedvalue name="not predefined sync 0" value="0xE0"/>
                        <fixedvalue name="not predefined sync 1" value="0xE1"/>
                        <fixedvalue name="not predefined sync 2" value="0xE2"/>
                        <fixedvalue name="not predefined sync 3" value="0xE3"/>
                        <fixedvalue name="not predefined sync 4" value="0xE4"/>
                        <fixedvalue name="not predefined sync 5" value="0xE5"/>
                        <fixedvalue name="not predefined sync 6" value="0xE6"/>
                        <fixedvalue name="not predefined sync 7" value="0xE7"/>
                        <fixedvalue name="not predefined sync 8" value="0xE8"/>
                        <fixedvalue name="not predefined sync 9" value="0xE9"/>
                        <fixedvalue name="not predefined sync A" value="0xEA"/>
                        <fixedvalue name="not predefined sync B" value="0xEB"/>
                        <fixedvalue name="not predefined sync C" value="0xEC"/>
                        <fixedvalue name="not predefined sync D" value="0xED"/>
                        <fixedvalue name="not predefined sync E" value="0xEE"/>
                        <fixedvalue name="not predefined sync F" value="0xEF"/>
                        <fixedvalue name="audio end (start of silence)" value="0xFD"/>
                        <fixedvalue name="audio file ends" value="0xFE"/>
                        <fixedvalue name="one more byte of events follows (all the following bytes with the value $FF have the same function)" value="0xFF"/>
                    </fixedvalues>
                </number>
                <number name="Time stamp" id="962" type="integer" length="1"/>
            </structure>
        </structure>
        <structure name="GEOB Frame - General encapsulated object" id="289" extends="id:453">
            <description>In this frame any type of file can be encapsulated. After the header, 'Frame size' and 'Encoding' follows 'MIME type' represented as as a terminated string encoded with ISO-8859-1. The filename is case sensitive and is encoded as 'Encoding'. Then follows a content description as terminated string, encoded as 'Encoding'. The last thing in the frame is the actual object. The first two strings may be omitted, leaving only their terminations. There may be more than one &quot;GEOB&quot; frame in each tag, but only one with the same content descriptor.</description>
            <string name="Frame ID" id="965" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="GEOB" value="GEOB"/>
                </fixedvalues>
            </string>
            <number name="Size" id="966" type="integer"/>
            <number name="Text encoding" id="975" type="integer" length="1"/>
            <string name="MIME type" id="976" type="zero-terminated"/>
            <string name="Filename" id="977" type="zero-terminated"/>
            <string name="Content description" id="978" type="zero-terminated"/>
            <binary name="Encapsulated object" id="979" length="remaining"/>
        </structure>
        <structure name="GRID Frame - Group identification registration" id="291" extends="id:453">
            <description>This frame enables grouping of otherwise unrelated frames. This can be used when some frames are to be signed. To identify which frames belongs to a set of frames a group identifier must be registered in the tag with this frame. The 'Owner identifier' is a null-terminated string with a URL containing an email address, or a link to a location where an email address can be found, that belongs to the organisation responsible for this grouping. Questions regarding the grouping should be sent to the indicated email address. The 'Group symbol' contains a value that associates the frame with this group throughout the whole tag. Values below $80 are reserved. The 'Group symbol' may optionally be followed by some group specific data, e.g. a digital signature. There may be several &quot;GRID&quot; frames in a tag but only one containing the same symbol and only one containing the same owner identifier. The group symbol must be used somewhere in the tag.</description>
            <string name="Frame ID" id="981" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="GRID" value="GRID"/>
                </fixedvalues>
            </string>
            <number name="Size" id="982" type="integer"/>
            <string name="Owner identifier" id="991" type="zero-terminated"/>
            <number name="Group symbol" id="992" type="integer" length="1"/>
            <binary name="Group dependent data" id="993" length="remaining"/>
        </structure>
        <structure name="IPLS Frame - Involved people list" id="293" extends="id:453">
            <description>Since there might be a lot of people contributing to an audio file in various ways, such as musicians and technicians, the 'Text information frames' are often insufficient to list everyone involved in a project. The 'Involved people list' is a frame containing the names of those involved, and how they were involved. The body simply contains a terminated string with the involvement directly followed by a terminated string with the involvee followed by a new involvement and so on. There may only be one &quot;IPLS&quot; frame in each tag.</description>
            <string name="Frame ID" id="995" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="IPLS" value="IPLS"/>
                </fixedvalues>
            </string>
            <number name="Size" id="996" type="integer"/>
            <number name="Text encoding" id="1005" type="integer" length="1"/>
            <string name="People list strings" id="1006" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="LINK Frame - Linked information" id="295" extends="id:453">
            <description>To keep space waste as low as possible this frame may be used to link information from another ID3v2 tag that might reside in another audio file or alone in a binary file. It is recommended that this method is only used when the files are stored on a CD-ROM or other circumstances when the risk of file seperation is low. The frame contains a frame identifier, which is the frame that should be linked into this tag, a URL field, where a reference to the file where the frame is given, and additional ID data, if needed. Data should be retrieved from the first tag found in the file to which this link points. There may be more than one &quot;LINK&quot; frame in a tag, but only one with the same contents. A linked frame is to be considered as part of the tag and has the same restrictions as if it was a physical part of the tag (i.e. only one &quot;RVRB&quot; frame allowed, whether it's linked or not).

Frames that may be linked and need no additional data are &quot;IPLS&quot;, &quot;MCID&quot;, &quot;ETCO&quot;, &quot;MLLT&quot;, &quot;SYTC&quot;, &quot;RVAD&quot;, &quot;EQUA&quot;, &quot;RVRB&quot;, &quot;RBUF&quot;, the text information frames and the URL link frames.

The &quot;TXXX&quot;, &quot;APIC&quot;, &quot;GEOB&quot; and &quot;AENC&quot; frames may be linked with the content descriptor as additional ID data.

The &quot;COMM&quot;, &quot;SYLT&quot; and &quot;USLT&quot; frames may be linked with three bytes of language descriptor directly followed by a content descriptor as additional ID data.</description>
            <string name="Frame ID" id="1008" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="LINK" value="LINK"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1009" type="integer"/>
            <string name="Frame identifier" id="1018" type="fixed-length" length="3"/>
            <string name="URL" id="1019" type="zero-terminated"/>
            <string name="ID and additional data" id="1020" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="MCDI Frame - Music CD identifier" id="1022" extends="id:453">
            <description>This frame is intended for music that comes from a CD, so that the CD can be identified in databases such as the CDDB. The frame consists of a binary dump of the Table Of Contents, TOC, from the CD, which is a header of 4 bytes and then 8 bytes/track on the CD plus 8 bytes for the 'lead out' making a maximum of 804 bytes. The offset to the beginning of every track on the CD should be described with a four bytes absolute CD-frame address per track, and not with absolute time. This frame requires a present and valid &quot;TRCK&quot; frame, even if the CD's only got one track. There may only be one &quot;MCDI&quot; frame in each tag.</description>
            <string name="Frame ID" id="1023" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="MCDI" value="MCDI"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1024" type="integer"/>
            <binary name="CD TOC" id="1033" length="remaining"/>
        </structure>
        <structure name="MLLT Frame - MPEG location lookup table" id="297" extends="id:453">
            <description>To increase performance and accuracy of jumps within a MPEG audio file, frames with timecodes in different locations in the file might be useful. The ID3v2 frame includes references that the software can use to calculate positions in the file. After the frame header is a descriptor of how much the 'frame counter' should increase for every reference. If this value is two then the first reference points out the second frame, the 2nd reference the 4th frame, the 3rd reference the 6th frame etc. In a similar way the 'bytes between reference' and 'milliseconds between reference' points out bytes and milliseconds respectively.

Each reference consists of two parts; a certain number of bits, as defined in 'bits for bytes deviation', that describes the difference between what is said in 'bytes between reference' and the reality and a certain number of bits, as defined in 'bits for milliseconds deviation', that describes the difference between what is said in 'milliseconds between reference' and the reality. The number of bits in every reference, i.e. 'bits for bytes deviation'+'bits for milliseconds deviation', must be a multiple of four. There may only be one &quot;MLLT&quot; frame in each tag.</description>
            <string name="Frame ID" id="1035" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="MLLT" value="MLLT"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1036" type="integer"/>
            <number name="MPEG frames between reference" id="1045" type="integer" length="2"/>
            <number name="Bytes between reference" id="1046" type="integer" length="3"/>
            <number name="Milliseconds between reference" id="1047" type="integer" length="3"/>
            <number name="Bits for bytes deviation" id="1048" type="integer" length="1"/>
            <number name="Bits for milliseconds dev." id="1049" type="integer" length="1"/>
            <structure name="Deviation" id="1050" repeatmin="0" repeatmax="-1">
                <number name="in bytes" id="1051" type="integer" length="1"/>
                <number name="in milliseconds" id="1052" type="integer" length="1"/>
            </structure>
        </structure>
        <structure name="OWNE Frame - Ownership frame" id="299" extends="id:453">
            <description>The ownership frame might be used as a reminder of a made transaction or, if signed, as proof. Note that the &quot;USER&quot; and &quot;TOWN&quot; frames are good to use in conjunction with this one. The frame begins, after the frame ID, size and encoding fields, with a 'price payed' field. The first three characters of this field contains the currency used for the transaction, encoded according to ISO-4217 alphabetic currency code. Concatenated to this is the actual price payed, as a numerical string using &quot;.&quot; as the decimal separator. Next is an 8 character date string (YYYYMMDD) followed by a string with the name of the seller as the last field in the frame. There may only be one &quot;OWNE&quot; frame in a tag.</description>
            <string name="Frame ID" id="1055" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="OWNE" value="OWNE"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1056" type="integer"/>
            <number name="Text encoding" id="1065" type="integer" length="1"/>
            <string name="Price payed" id="1066" type="zero-terminated"/>
            <string name="Date of purchase" id="1067" type="zero-terminated"/>
            <string name="Seller" id="1068" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="PRIV Frame - Ownership frame" id="301" extends="id:453">
            <description>This frame is used to contain information from a software producer that its program uses and does not fit into the other frames. The frame consists of an 'Owner identifier' string and the binary data. The 'Owner identifier' is a null-terminated string with a URL containing an email address, or a link to a location where an email address can be found, that belongs to the organisation responsible for the frame. Questions regarding the frame should be sent to the indicated email address. The tag may contain more than one &quot;PRIV&quot; frame but only with different contents. It is recommended to keep the number of &quot;PRIV&quot; frames as low as possible.</description>
            <string name="Frame ID" id="1070" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="PRIV" value="PRIV"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1071" type="integer"/>
            <string name="Owner identifier" id="1080" type="zero-terminated"/>
            <binary name="The private data" id="1081" length="remaining"/>
        </structure>
        <structure name="PCNT Frame - Play counter" id="303" extends="id:453">
            <description>This is simply a counter of the number of times a file has been played. The value is increased by one every time the file begins to play. There may only be one &quot;PCNT&quot; frame in each tag. When the counter reaches all one's, one byte is inserted in front of the counter thus making the counter eight bits bigger. The counter must be at least 32-bits long to begin with.</description>
            <string name="Frame ID" id="1083" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="PCNT" value="PCNT"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1084" type="integer"/>
            <number name="Counter" id="1093" type="integer" length="4"/>
        </structure>
        <structure name="POPM Frame - Popularimeter" id="305" extends="id:453">
            <description>The purpose of this frame is to specify how good an audio file is. Many interesting applications could be found to this frame such as a playlist that features better audiofiles more often than others or it could be used to profile a person's taste and find other 'good' files by comparing people's profiles. The frame is very simple. It contains the email address to the user, one rating byte and a four byte play counter, intended to be increased with one for every time the file is played. The email is a terminated string. The rating is 1-255 where 1 is worst and 255 is best. 0 is unknown. If no personal counter is wanted it may be omitted. When the counter reaches all one's, one byte is inserted in front of the counter thus making the counter eight bits bigger in the same away as the play counter (&quot;PCNT&quot;). There may be more than one &quot;POPM&quot; frame in each tag, but only one with the same email address.</description>
            <string name="Frame ID" id="1095" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="POPM" value="POPM"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1096" type="integer"/>
            <string name="Email to user" id="1105" type="zero-terminated"/>
            <number name="Rating" id="1106" type="integer" length="1"/>
            <number name="Counter" id="1107" type="integer" length="4"/>
        </structure>
        <structure name="POSS Frame - Position synchronisation frame" id="307" extends="id:453">
            <description>This frame delivers information to the listener of how far into the audio stream he picked up; in effect, it states the time offset of the first frame in the stream.#

If this frame is used in the beginning of a file the value is always 0. There may only be one &quot;POSS&quot; frame in each tag.</description>
            <string name="Frame ID" id="1109" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="POSS" value="POSS"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1110" type="integer"/>
            <number name="Time stamp format" id="1119" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Absolute time, 32 bit sized, using MPEG frames as unit" value="1"/>
                    <fixedvalue name="Absolute time, 32 bit sized, using milliseconds as unit" value="2"/>
                </fixedvalues>
            </number>
        </structure>
        <structure name="RBUF Frame - Recommended buffer size" id="309" extends="id:453">
            <description>Sometimes the server from which a audio file is streamed is aware of transmission or coding problems resulting in interruptions in the audio stream. In these cases, the size of the buffer can be recommended by the server using this frame. If the 'embedded info flag' is true (1) then this indicates that an ID3 tag with the maximum size described in 'Buffer size' may occur in the audiostream. In such case the tag should reside between two MPEG frames, if the audio is MPEG encoded. If the position of the next tag is known, 'offset to next tag' may be used. The offset is calculated from the end of tag in which this frame resides to the first byte of the header in the next. This field may be omitted. Embedded tags are generally not recommended since this could render unpredictable behaviour from present software/hardware.
For applications like streaming audio it might be an idea to embed tags into the audio stream though. If the clients connects to individual connections like HTTP and there is a possibility to begin every transmission with a tag, then this tag should include a 'recommended buffer size' frame. If the client is connected to a arbitrary point in the stream, such as radio or multicast, then the 'recommended buffer size' frame should be included in every tag. Every tag that is picked up after the initial/first tag is to be considered as an update of the previous one. E.g. if there is a &quot;TIT2&quot; frame in the first received tag and one in the second tag, then the first should be 'replaced' with the second.
The 'Buffer size' should be kept to a minimum. There may only be one &quot;RBUF&quot; frame in each tag.</description>
            <string name="Frame ID" id="1121" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="RBUF" value="RBUF"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1122" type="integer"/>
            <number name="Buffer size" id="1131" type="integer" length="3"/>
            <number name="Embedded info flag" id="1132" type="integer" length="1"/>
            <number name="Offset to next tag" id="1133" type="integer" length="4"/>
        </structure>
        <structure name="RVAD Frame - Relative volume adjustment" id="311" extends="id:453">
            <description>This is a more subjective function than the previous ones. It allows the user to say how much he wants to increase/decrease the volume on each channel while the file is played. The purpose is to be able to align all files to a reference volume, so that you don't have to change the volume constantly. This frame may also be used to balance adjust the audio. If the volume peak levels are known then this could be described with the 'Peak volume right' and 'Peak volume left' field. If Peakvolume is not known these fields could be left zeroed or, if no other data follows, be completely omitted. There may only be one &quot;RVAD&quot; frame in each tag.

In the increment/decrement field bit 0 is used to indicate the right channel and bit 1 is used to indicate the left channel. 1 is increment and 0 is decrement.

The 'bits used for volume description' field is normally $10 (16 bits) for MPEG 2 layer I, II and III and MPEG 2.5. This value may not be $00. The volume is always represented with whole bytes, padded in the beginning (highest bits) when 'bits used for volume description' is not a multiple of eight.

This datablock is then optionally followed by a volume definition for the left and right back channels. If this information is appended to the frame the first two channels will be treated as front channels. In the increment/decrement field bit 2 is used to indicate the right back channel and bit 3 for the left back channel.

If the center channel adjustment is present the following is appended to the existing frame, after the left and right back channels. The center channel is represented by bit 4 in the increase/decrease field.

If the bass channel adjustment is present the following is appended to the existing frame, after the center channel. The bass channel is represented by bit 5 in the increase/decrease field.</description>
            <string name="Frame ID" id="1135" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="RVAD" value="RVAD"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1136" type="integer"/>
            <number name="Increment/decrement" id="1145" type="integer" length="1"/>
            <number name="BitsUsedForVolumeDescription" id="1146" type="integer" length="1"/>
            <number name="Relative volume change, right" id="1147" type="integer" length="BitsUsedForVolumeDescription" lengthunit="bit"/>
            <number name="Relative volume change, left" id="1148" type="integer" length="BitsUsedForVolumeDescription" lengthunit="bit"/>
            <number name="Peak volume right" id="1149" type="integer" length="BitsUsedForVolumeDescription" lengthunit="bit"/>
            <number name="Peak volume left" id="1150" type="integer" length="BitsUsedForVolumeDescription" lengthunit="bit"/>
        </structure>
        <structure name="RVA2 Frame - Relative volume adjustment (2)" id="313" extends="id:453">
            <description>This is a more subjective frame than the previous ones. It allows the user to say how much he wants to increase/decrease the volume on each channel when the file is played. The purpose is to be able to align all files to a reference volume, so that you don't have to change the volume constantly. This frame may also be used to balance adjust the audio. The volume adjustment is encoded as a fixed point decibel value, 16 bit signed integer representing (adjustment*512), giving +/- 64 dB with a precision of 0.001953125 dB. E.g. +2 dB is stored as $04 00 and -2 dB is $FC 00. There may be more than one &quot;RVA2&quot; frame in each tag, but only one with the same identification string.

The 'identification' string is used to identify the situation and/or device where this adjustment should apply. The following is then repeated for every channel

Bits representing peak can be any number between 0 and 255. 0 means that there is no peak volume field. The peak volume field is always padded to whole bytes, setting the most significant bits to zero.</description>
            <string name="Frame ID" id="1152" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="RVA2" value="RVA2"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1153" type="integer"/>
            <string name="Identification" id="1162" type="zero-terminated">
                <description>The 'identification' string is used to identify the situation and/or device where this adjustment should apply.</description>
            </string>
            <structure name="Channel" id="1163" repeatmin="0" repeatmax="-1">
                <number name="Type of channel" id="1164" type="integer" length="1">
                    <fixedvalues>
                        <fixedvalue name="Other" value="0"/>
                        <fixedvalue name="Master volume" value="1"/>
                        <fixedvalue name="Front right" value="2"/>
                        <fixedvalue name="Front left" value="3"/>
                        <fixedvalue name="Back right" value="4"/>
                        <fixedvalue name="Back left" value="5"/>
                        <fixedvalue name="Front centre" value="6"/>
                        <fixedvalue name="Back centre" value="7"/>
                        <fixedvalue name="Subwoofer" value="8"/>
                    </fixedvalues>
                </number>
                <number name="Volume adjustment" id="1165" type="integer" length="2"/>
                <number name="BitsRepresentingPeak" id="1166" type="integer" length="1">
                    <description>Bits representing peak can be any number between 0 and 255. 0 means that there is no peak volume field. The peak volume field is always padded to whole bytes, setting the most significant bits to zero.</description>
                </number>
                <number name="Peak volume" id="1167" type="integer" length="BitsRepresentingPeak" lengthunit="bit"/>
            </structure>
        </structure>
        <structure name="RVRB Frame - Reverb" id="315" extends="id:453">
            <description>Yet another subjective one. You may here adjust echoes of different kinds. Reverb left/right is the delay between every bounce in ms. Reverb bounces left/right is the number of bounces that should be made. $FF equals an infinite number of bounces. Feedback is the amount of volume that should be returned to the next echo bounce. $00 is 0%, $FF is 100%. If this value were $7F, there would be 50% volume reduction on the first bounce, 50% of that on the second and so on. Left to left means the sound from the left bounce to be played in the left speaker, while left to right means sound from the left bounce to be played in the right speaker.

'Premix left to right' is the amount of left sound to be mixed in the right before any reverb is applied, where $00 id 0% and $FF is 100%. 'Premix right to left' does the same thing, but right to left. Setting both premix to $FF would result in a mono output (if the reverb is applied symmetric). There may only be one &quot;RVRB&quot; frame in each tag.</description>
            <string name="Frame ID" id="1170" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="RVRB" value="RVRB"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1171" type="integer"/>
            <number name="Reverb left (ms)" id="1180" type="integer" length="2"/>
            <number name="Reverb right (ms)" id="1181" type="integer" length="2"/>
            <number name="Reverb bounces, left" id="1182" type="integer" length="1"/>
            <number name="Reverb bounces, right" id="1183" type="integer" length="1"/>
            <number name="Reverb feedback, left to left" id="1184" type="integer" length="1"/>
            <number name="Reverb feedback, left to right" id="1185" type="integer" length="1"/>
            <number name="Reverb feedback, right to right" id="1186" type="integer" length="1"/>
            <number name="Reverb feedback, right to left" id="1187" type="integer" length="1"/>
            <number name="Premix left to right" id="1188" type="integer" length="1"/>
            <number name="Premix right to left" id="1189" type="integer" length="1"/>
        </structure>
        <structure name="SEEK Frame - Seek frame" id="317" extends="id:453">
            <description>This frame indicates where other tags in a file/stream can be found. The 'minimum offset to next tag' is calculated from the end of this tag to the beginning of the next. There may only be one 'seek frame' in a tag.</description>
            <string name="Frame ID" id="1191" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="SEEK" value="SEEK"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1192" type="integer"/>
            <number name="Minimum offset to next tag" id="1201" type="integer" length="4"/>
        </structure>
        <structure name="SIGN Frame - Signature frame" id="319" extends="id:453">
            <description>This frame enables a group of frames, grouped with the 'Group identification registration', to be signed. Although signatures can reside inside the registration frame, it might be desired to store the signature elsewhere, e.g. in watermarks. There may be more than one 'signature frame' in a tag, but no two may be identical.</description>
            <string name="Frame ID" id="1203" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="SIGN" value="SIGN"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1204" type="integer"/>
            <number name="Group symbol" id="1213" type="integer" length="1"/>
            <binary name="Signature" id="1214" length="remaining"/>
        </structure>
        <structure name="SYLT Frame - Synchronized lyric/text" id="321" extends="id:453">
            <description>This is another way of incorporating the words, said or sung lyrics, in the audio file as text, this time, however, in sync with the audio. It might also be used to describing events e.g. occurring on a stage or on the screen in sync with the audio. The header includes a content descriptor, represented with as terminated textstring. If no descriptor is entered, 'Content descriptor' is $00 (00) only.

The text that follows the frame header differs from that of the unsynchronised lyrics/text transcription in one major way. Each syllable (or whatever size of text is considered to be convenient by the encoder) is a null terminated string followed by a time stamp denoting where in the sound file it belongs.

The 'time stamp' is set to zero or the whole sync is omitted if located directly at the beginning of the sound. All time stamps should be sorted in chronological order. The sync can be considered as a validator of the subsequent string.

Newline ($0A) characters are allowed in all &quot;SYLT&quot; frames and should be used after every entry (name, event etc.) in a frame with the content type $03 - $04.

A few considerations regarding whitespace characters: Whitespace separating words should mark the beginning of a new word, thus occurring in front of the first syllable of a new word. This is also valid for new line characters. A syllable followed by a comma should not be broken apart with a sync (both the syllable and the comma should be before the sync).</description>
            <string name="Frame ID" id="1216" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="SYLT" value="SYLT"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1217" type="integer"/>
            <number name="Text encoding" id="1226" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="ISO-8859-1 character set is used" value="0"/>
                    <fixedvalue name="Unicode character set is used" value="1"/>
                </fixedvalues>
            </number>
            <string name="Language" id="1227" type="fixed-length" length="3"/>
            <number name="Time stamp format" id="1228" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Absolute time, 32 bit sized, using MPEG frames as unit" value="1"/>
                    <fixedvalue name="Absolute time, 32 bit sized, using milliseconds as unit" value="2"/>
                </fixedvalues>
            </number>
            <number name="Content type" id="1229" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="is other" value="0"/>
                    <fixedvalue name="is lyrics" value="1"/>
                    <fixedvalue name="is text transcription" value="2"/>
                    <fixedvalue name="is movement/part name (e.g. &quot;Adagio&quot;)" value="3"/>
                    <fixedvalue name="is events (e.g. &quot;Don Quijote enters the stage&quot;)" value="4"/>
                    <fixedvalue name="is chord (e.g. &quot;Bb F Fsus&quot;)" value="5"/>
                    <fixedvalue name="is trivia/'pop up' information" value="6"/>
                </fixedvalues>
            </number>
            <string name="Content descriptor" id="1230" type="zero-terminated"/>
            <structure name="Content" id="1231" repeatmin="0" repeatmax="-1">
                <string name="Text" id="1232" type="zero-terminated"/>
                <number name="Time stamp" id="1233" type="integer" length="4"/>
            </structure>
        </structure>
        <structure name="SYTC Frame - Synchronized tempo codes" id="323" extends="id:453">
            <description>For a more accurate description of the tempo of a musical piece this frame might be used. After the header follows one byte describing which time stamp format should be used. Then follows one or more tempo codes. Each tempo code consists of one tempo part and one time part. The tempo is in BPM described with one or two bytes. If the first byte has the value $FF, one more byte follows, which is added to the first giving a range from 2 - 510 BPM, since $00 and $01 is reserved. $00 is used to describe a beat-free time period, which is not the same as a music-free time period. $01 is used to indicate one single beat-stroke followed by a beat-free period.

The tempo descriptor is followed by a time stamp. Every time the tempo in the music changes, a tempo descriptor may indicate this for the player. All tempo descriptors should be sorted in chronological order. The first beat-stroke in a time-period is at the same time as the beat description occurs. There may only be one &quot;SYTC&quot; frame in each tag.</description>
            <string name="Frame ID" id="1236" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="SYTC" value="SYTC"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1237" type="integer"/>
            <number name="Time stamp format" id="1246" type="integer" length="1">
                <fixedvalues>
                    <fixedvalue name="Absolute time, 32 bit sized, using MPEG frames as unit" value="1"/>
                    <fixedvalue name="Absolute time, 32 bit sized, using milliseconds as unit" value="2"/>
                </fixedvalues>
            </number>
            <binary name="Tempo data" id="1247" length="remaining"/>
        </structure>
        <structure name="ID3v2.3 Text Information Frame" id="1249" extends="id:453" valueexpression="Encoded String">
            <description>The text information frames are the most important frames, containing information like artist, album and more. There may only be one text information frame of its kind in an tag. If the textstring is followed by a termination ($00 (00)) all the following information should be ignored and not be displayed. All text frame identifiers begin with &quot;T&quot;. Only text frame identifiers begin with &quot;T&quot;, with the exception of the &quot;TXXX&quot; frame.</description>
            <string name="Frame ID" id="1250" type="fixed-length"/>
            <number name="Size" id="1251" type="integer"/>
            <structref name="Encoded String" id="1260" structure="id:587"/>
        </structure>
        <structure name="TALB Frame - Album/Movie/Show title" id="325" extends="id:1249">
            <description>The 'Album/Movie/Show title' frame is intended for the title of the recording(/source of sound) which the audio in the file is taken from.</description>
            <string name="Frame ID" id="1262" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TALB" value="TALB"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TBPM Frame - BPM (beats per minute)" id="327" extends="id:1249">
            <description>The 'BPM' frame contains the number of beats per minute in the mainpart of the audio. The BPM is an integer and represented as a numerical string.</description>
            <string name="Frame ID" id="1274" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TBPM" value="TBPM"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TCOM Frame - Composer" id="329" extends="id:1249">
            <description>The 'Composer(s)' frame is intended for the name of the composer(s). They are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="1286" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TCOM" value="TCOM"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TCON Frame - Content type" id="331" extends="id:1249">
            <description>The 'Content type', which previously was stored as a one byte numeric value only, is now a numeric string. You may use one or several of the types as ID3v1.1 did or, since the category list would be impossible to maintain with accurate and up to date categories, define your own. 

References to the ID3v1 genres can be made by, as first byte, enter &quot;(&quot; followed by a number from the genres list (appendix A) and ended with a &quot;)&quot; character. This is optionally followed by a refinement, e.g. &quot;(21)&quot; or &quot;(4)Eurodisco&quot;. Several references can be made in the same frame, e.g. &quot;(51)(39)&quot;. If the refinement should begin with a &quot;(&quot; character it should be replaced with &quot;((&quot;, e.g. &quot;((I can figure out any genre)&quot; or &quot;(55)((I think...)&quot;. The following new content types is defined in ID3v2 and is implemented in the same way as the numerig content types, e.g. &quot;(RX)&quot;.</description>
            <string name="Frame ID" id="1298" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TCON" value="TCON"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TCOP Frame - Copyright message" id="333" extends="id:1249">
            <description>The 'Copyright message' frame, which must begin with a year and a space character (making five characters), is intended for the copyright holder of the original sound, not the audio file itself. The absence of this frame means only that the copyright information is unavailable or has been removed, and must not be interpreted to mean that the sound is public domain. Every time this field is displayed the field must be preceded with &quot;Copyright © &quot;.</description>
            <string name="Frame ID" id="1310" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TCOP" value="TCOP"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDAT Frame - Date" id="335" extends="id:1249">
            <description>The 'Date' frame is a numeric string in the DDMM format containing the date for the recording. This field is always four characters long.</description>
            <string name="Frame ID" id="1322" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDAT" value="TDAT"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDEN Frame - Encoding time" id="337" extends="id:1249">
            <description>The 'Encoding time' frame contains a timestamp describing when the audio was encoded. Timestamp format is described in the ID3v2 structure document [ID3v2-strct].</description>
            <string name="Frame ID" id="1334" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDEN" value="TDEN"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDLY Frame - Playlist delay" id="339" extends="id:1249">
            <description>The 'Playlist delay' defines the numbers of milliseconds of silence between every song in a playlist. The player should use the &quot;ETC&quot; frame, if present, to skip initial silence and silence at the end of the audio to match the 'Playlist delay' time. The time is represented as a numeric string.</description>
            <string name="Frame ID" id="1346" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDLY" value="TDLY"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDOR Frame - Original release time" id="341" extends="id:1249">
            <description>The 'Original release time' frame contains a timestamp describing when the original recording of the audio was released. Timestamp format is described in the ID3v2 structure document [ID3v2-strct].</description>
            <string name="Frame ID" id="1358" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDOR" value="TDOR"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDRC Frame - Recording time" id="343" extends="id:1249">
            <description>The 'Recording time' frame contains a timestamp describing when the audio was recorded. Timestamp format is described in the ID3v2 structure document [ID3v2-strct].</description>
            <string name="Frame ID" id="1370" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDRC" value="TDRC"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDRL Frame - Release time" id="345" extends="id:1249">
            <description>The 'Release time' frame contains a timestamp describing when the audio was first released. Timestamp format is described in the ID3v2 structure document [ID3v2-strct].</description>
            <string name="Frame ID" id="1382" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDRL" value="TDRL"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TDTG Frame - Tagging time" id="347" extends="id:1249">
            <description>The 'Tagging time' frame contains a timestamp describing then the audio was tagged. Timestamp format is described in the ID3v2 structure document [ID3v2-strct].</description>
            <string name="Frame ID" id="1394" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TDTG" value="TDTG"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TENC Frame - Encoded by" id="349" extends="id:1249">
            <description>The 'Encoded by' frame contains the name of the person or organisation that encoded the audio file. This field may contain a copyright message, if the audio file also is copyrighted by the encoder.</description>
            <string name="Frame ID" id="1406" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TENC" value="TENC"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TEXT Frame - Lyricist/Text writer" id="351" extends="id:1249">
            <description>The 'Lyricist(s)/Text writer(s)' frame is intended for the writer(s) of the text or lyrics in the recording. They are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="1418" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TEXT" value="TEXT"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TFLT Frame - File type" id="353" extends="id:1249">
            <description>The 'File type' frame indicates which type of audio this tag defines. The following type and refinements are defined:
MPG       MPEG Audio
/1        MPEG 1/2 layer I
/2        MPEG 1/2 layer II
/3        MPEG 1/2 layer III
/2.5      MPEG 2.5
 /AAC     Advanced audio compression
VQF       Transform-domain Weighted Interleave Vector Quantization
PCM       Pulse Code Modulated audio
but other types may be used, not for these types though. This is used in a similar way to the predefined types in the &quot;TMED&quot; frame, but without parentheses. If this frame is not present audio type is assumed to be &quot;MPG&quot;.</description>
            <string name="Frame ID" id="1430" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TFLT" value="TFLT"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TIME Frame - Time" id="355" extends="id:1249">
            <description>The 'Time' frame is a numeric string in the HHMM format containing the time for the recording. This field is always four characters long.</description>
            <string name="Frame ID" id="1442" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TIME" value="TIME"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TIPL Frame - Involved people list" id="357" extends="id:1249">
            <description>The 'Involved people list' is very similar to the musician credits list, but maps between functions, like producer, and names.</description>
            <string name="Frame ID" id="1454" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TIPL" value="TIPL"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TIT1 Frame - Content group description" id="359" extends="id:1249">
            <description>The 'Content group description' frame is used if the sound belongs to a larger category of sounds/music. For example, classical music is often sorted in different musical sections (e.g. &quot;Piano Concerto&quot;, &quot;Weather - Hurricane&quot;).</description>
            <string name="Frame ID" id="1466" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TIT1" value="TIT1"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TIT2 Frame - Title/songname/content description" id="361" extends="id:1249">
            <description>The 'Title/Songname/Content description' frame is the actual name of the piece (e.g. &quot;Adagio&quot;, &quot;Hurricane Donna&quot;).</description>
            <string name="Frame ID" id="1478" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TIT2" value="TIT2"/>
                </fixedvalues>
            </string>
            <string name="Text" id="1489" type="fixed-length"/>
        </structure>
        <structure name="TIT3 Frame - Subtitle/Description refinement" id="363" extends="id:1249">
            <description>The 'Subtitle/Description refinement' frame is used for information directly related to the contents title (e.g. &quot;Op. 16&quot; or &quot;Performed live at Wembley&quot;).</description>
            <string name="Frame ID" id="1491" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TIT3" value="TIT3"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TKEY Frame - Initial key" id="365" extends="id:1249">
            <description>The 'Initial key' frame contains the musical key in which the sound starts. It is represented as a string with a maximum length of three characters. The ground keys are represented with &quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;, &quot;F&quot; and &quot;G&quot; and halfkeys represented with &quot;b&quot; and &quot;#&quot;. Minor is represented as &quot;m&quot;. Example &quot;Cbm&quot;. Off key is represented with an &quot;o&quot; only.</description>
            <string name="Frame ID" id="1503" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TKEY" value="TKEY"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TLAN Frame - Language(s)" id="367" extends="id:1249">
            <description>The 'Language(s)' frame should contain the languages of the text or lyrics spoken or sung in the audio. The language is represented with three characters according to ISO-639-2. If more than one language is used in the text their language codes should follow according to their usage.</description>
            <string name="Frame ID" id="1515" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TLAN" value="TLAN"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TLEN Frame - Length" id="369" extends="id:1249">
            <description>The 'Length' frame contains the length of the audiofile in milliseconds, represented as a numeric string.</description>
            <string name="Frame ID" id="1527" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TLEN" value="TLEN"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TMCL Frame - Musician credits list" id="371" extends="id:1249">
            <description>The 'Musician credits list' is intended as a mapping between instruments and the musician that played it. Every odd field is an instrument and every even is an artist or a comma delimited list of artists.</description>
            <string name="Frame ID" id="1539" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TMCL" value="TMCL"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TMED Frame - Media type" id="373" extends="id:1249">
            <description>The 'Media type' frame describes from which media the sound originated. This may be a text string or a reference to the predefined media types found in the list below. References are made within &quot;(&quot; and &quot;)&quot; and are optionally followed by a text refinement, e.g. &quot;(MC) with four channels&quot;. If a text refinement should begin with a &quot;(&quot; character it should be replaced with &quot;((&quot; in the same way as in the &quot;TCO&quot; frame. Predefined refinements is appended after the media type, e.g. &quot;(CD/A)&quot; or &quot;(VID/PAL/VHS)&quot;.</description>
            <string name="Frame ID" id="1551" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TMED" value="TMED"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TMOO Frame - Mood" id="375" extends="id:1249">
            <description>The 'Mood' frame is intended to reflect the mood of the audio with a few keywords, e.g. &quot;Romantic&quot; or &quot;Sad&quot;.</description>
            <string name="Frame ID" id="1563" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TMOO" value="TMOO"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOAL Frame - Original album/movie/show title" id="377" extends="id:1249">
            <description>The 'Original album/movie/show title' frame is intended for the title of the original recording (or source of sound), if for example the music in the file should be a cover of a previously released song.</description>
            <string name="Frame ID" id="1575" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOAL" value="TOAL"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOFN Frame - Original filename" id="379" extends="id:1249">
            <description>The 'Original filename' frame contains the preferred filename for the file, since some media doesn't allow the desired length of the filename. The filename is case sensitive and includes its suffix.</description>
            <string name="Frame ID" id="1587" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOFN" value="TOFN"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOLY Frame - Original lyricist(s)/text writer(s)" id="381" extends="id:1249">
            <description>The 'Original lyricist(s)/text writer(s)' frame is intended for the text writer(s) of the original recording, if for example the music in the file should be a cover of a previously released song. The text writers are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="1599" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOLY" value="TOLY"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOPE Frame - Original artist(s)/performer(s)" id="383" extends="id:1249">
            <description>The 'Original artist(s)/performer(s)' frame is intended for the performer(s) of the original recording, if for example the music in the file should be a cover of a previously released song. The performers are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="1611" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOPE" value="TOPE"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TORY Frame - Original release year" id="385" extends="id:1249">
            <description>The 'Original release year' frame is intended for the year when the original recording, if for example the music in the file should be a cover of a previously released song, was released. The field is formatted as in the &quot;TYER&quot; frame.</description>
            <string name="Frame ID" id="1623" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TORY" value="TORY"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TOWN Frame - File owner/licensee" id="387" extends="id:1249">
            <description>The 'File owner/licensee' frame contains the name of the owner or licensee of the file and it's contents.</description>
            <string name="Frame ID" id="1635" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TOWN" value="TOWN"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPE1 Frame - Lead performer(s)/Soloist(s)" id="389" extends="id:1249">
            <description>The 'Lead artist(s)/Lead performer(s)/Soloist(s)/Performing group' is used for the main artist(s). They are seperated with the &quot;/&quot; character.</description>
            <string name="Frame ID" id="1647" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPE1" value="TPE1"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPE2 Frame - Band/orchestra/accompaniment" id="391" extends="id:1249">
            <description>The 'Band/Orchestra/Accompaniment' frame is used for additional information about the performers in the recording.</description>
            <string name="Frame ID" id="1659" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPE2" value="TPE2"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPE3 Frame - Conductor/performer refinement" id="393" extends="id:1249">
            <description>The 'Conductor' frame is used for the name of the conductor.</description>
            <string name="Frame ID" id="1671" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPE3" value="TPE3"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPE4 Frame - Interpreted, remixed, or otherwise modified by" id="395" extends="id:1249">
            <description>The 'Interpreted, remixed, or otherwise modified by' frame contains more information about the people behind a remix and similar interpretations of another existing piece.</description>
            <string name="Frame ID" id="1683" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPE4" value="TPE4"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPOS Frame - Part of a set" id="397" extends="id:1249">
            <description>The 'Part of a set' frame is a numeric string that describes which part of a set the audio came from. This frame is used if the source described in the &quot;TALB&quot; frame is divided into several mediums, e.g. a double CD. The value may be extended with a &quot;/&quot; character and a numeric string containing the total number of parts in the set. E.g. &quot;1/2&quot;.</description>
            <string name="Frame ID" id="1695" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPOS" value="TPOS"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPRO Frame - Produced notice" id="401" extends="id:1249">
            <description>The 'Produced notice' frame, in which the string must begin with a year and a space character (making five characters), is intended for the production copyright holder of the original sound, not the audio file itself. The absence of this frame means only that the production copyright information is unavailable or has been removed, and must not be interpreted to mean that the audio is public domain. Every time this field is displayed the field must be preceded with &quot;Produced &quot; (P) &quot; &quot;, where (P) is one character showing a P in a circle.</description>
            <string name="Frame ID" id="1707" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPRO" value="TPRO"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TPUB Frame - Publisher" id="399" extends="id:1249">
            <description>The 'Publisher' frame simply contains the name of the label or publisher.</description>
            <string name="Frame ID" id="1719" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TPUB" value="TPUB"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TRCK Frame - Track number/Position in set" id="403" extends="id:1249">
            <description>The 'Track number/Position in set' frame is a numeric string containing the order number of the audio-file on its original recording. This may be extended with a &quot;/&quot; character and a numeric string containing the total numer of tracks/elements on the original recording. E.g. &quot;4/9&quot;.</description>
            <string name="Frame ID" id="1731" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TRCK" value="TRCK"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TRDA Frame - Recording dates" id="405" extends="id:1249">
            <description>The 'Recording dates' frame is a intended to be used as complement to the &quot;TYER&quot;, &quot;TDAT&quot; and &quot;TIME&quot; frames. E.g. &quot;4th-7th June, 12th June&quot; in combination with the &quot;TYER&quot; frame.</description>
            <string name="Frame ID" id="1743" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TRDA" value="TRDA"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TRSN Frame - Internet radio station name" id="407" extends="id:1249">
            <description>The 'Internet radio station name' frame contains the name of the internet radio station from which the audio is streamed.</description>
            <string name="Frame ID" id="1755" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TRSN" value="TRSN"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TRSO Frame - Internet radio station owner" id="409" extends="id:1249">
            <description>The 'Internet radio station owner' frame contains the name of the owner of the internet radio station from which the audio is streamed.</description>
            <string name="Frame ID" id="1767" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TRSO" value="TRSO"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSIZ Frame - Size" id="411" extends="id:1249">
            <description>The 'Size' frame contains the size of the audiofile in bytes, excluding the ID3v2 tag, represented as a numeric string.</description>
            <string name="Frame ID" id="1779" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSIZ" value="TSIZ"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSOA Frame - Album sort order" id="413" extends="id:1249">
            <description>The 'Album sort order' frame defines a string which should be used instead of the album name (TALB) for sorting purposes. E.g. an album named &quot;A Soundtrack&quot; might preferably be sorted as &quot;Soundtrack&quot;.</description>
            <string name="Frame ID" id="1791" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSOA" value="TSOA"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSOP Frame - Performer sort order" id="415" extends="id:1249">
            <description>The 'Performer sort order' frame defines a string which should be used instead of the performer (TPE2) for sorting purposes.</description>
            <string name="Frame ID" id="1803" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSOP" value="TSOP"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSOT Frame - Title sort order" id="417" extends="id:1249">
            <description>The 'Title sort order' frame defines a string which should be used instead of the title (TIT2) for sorting purposes.</description>
            <string name="Frame ID" id="1815" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSOT" value="TSOT"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSRC Frame - ISRC (international standard recording code)" id="419" extends="id:1249">
            <description>The 'ISRC' frame should contain the International Standard Recording Code (ISRC) (12 characters).</description>
            <string name="Frame ID" id="1827" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSRC" value="TSRC"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSSE Frame - Software/Hardware and settings used for encoding" id="421" extends="id:1249">
            <description>The 'Software/Hardware and settings used for encoding' frame includes the used audio encoder and its settings when the file was encoded. Hardware refers to hardware encoders, not the computer on which a program was run.</description>
            <string name="Frame ID" id="1839" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSSE" value="TSSE"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TSST Frame - Set subtitle" id="423" extends="id:1249">
            <description>The 'Set subtitle' frame is intended for the subtitle of the part of a set this track belongs to.</description>
            <string name="Frame ID" id="1851" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TSST" value="TSST"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TYER Frame - Year" id="425" extends="id:1249">
            <description>The 'Year' frame is a numeric string with a year of the recording. This frames is always four characters long (until the year 10000).</description>
            <string name="Frame ID" id="1863" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TYER" value="TYER"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="TXXX Frame - User defined text information frame" id="427" extends="id:453" valueexpression="Value">
            <description>This frame is intended for one-string text information concerning the audiofile in a similar way to the other &quot;T&quot;-frames. The frame body consists of a description of the string, represented as a terminated string, followed by the actual string. There may be more than one &quot;TXXX&quot; frame in each tag, but only one with the same description.</description>
            <string name="Frame ID" id="1875" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="TXXX" value="TXXX"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1876" type="integer"/>
            <number name="Text encoding" id="1885" type="integer" length="1"/>
            <string name="Description" id="1886" type="zero-terminated"/>
            <string name="Value" id="1887" type="fixed-length"/>
        </structure>
        <structure name="UFID Frame - Unique file identifier" id="429" extends="id:453" valueexpression="Owner identifier">
            <description>This frame's purpose is to be able to identify the audio file in a database that may contain more information relevant to the content. Since standardisation of such a database is beyond this document, all frames begin with a null-terminated string with a URL [URL] containing an email address, or a link to a location where an email address can be found, that belongs to the organisation responsible for this specific database implementation. Questions regarding the database should be sent to the indicated email address. The URL should not be used for the actual database queries. If a $00 is found directly after the 'Frame size' the whole frame should be ignored, and preferably be removed. The 'Owner identifier' is then followed by the actual identifier, which may be up to 64 bytes. There may be more than one &quot;UFI&quot; frame in a tag, but only one with the same 'Owner identifier'.</description>
            <string name="Frame ID" id="1889" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="UFID" value="UFID"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1890" type="integer"/>
            <string name="Owner identifier" id="1899" type="zero-terminated"/>
            <binary name="Identifier" id="1900" length="remaining"/>
        </structure>
        <structure name="USER Frame - Terms of use" id="431" extends="id:453">
            <description>This frame contains a brief description of the terms of use and ownership of the file. More detailed information concerning the legal terms might be available through the &quot;WCOP&quot; frame. Newlines are allowed in the text. There may only be one &quot;USER&quot; frame in a tag.</description>
            <string name="Frame ID" id="1902" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="USER" value="USER"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1903" type="integer"/>
            <number name="Text encoding" id="1912" type="integer" length="1"/>
            <string name="Language" id="1913" type="fixed-length" length="3"/>
            <string name="The actual text" id="1914" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="USLT Frame - Unsychronized lyric/text transcription" id="433" extends="id:453" valueexpression="Lyrics/text">
            <description>This frame contains the lyrics of the song or a text transcription of other vocal activities. The head includes an encoding descriptor and a content descriptor. The body consists of the actual text. The 'Content descriptor' is a terminated string. If no descriptor is entered, 'Content descriptor' is $00 (00) only. Newline characters are allowed in the text. There may be more than one 'Unsynchronised lyrics/text transcription' frame in each tag, but only one with the same language and content descriptor.</description>
            <string name="Frame ID" id="1916" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="USLT" value="USLT"/>
                </fixedvalues>
            </string>
            <number name="Size" id="1917" type="integer"/>
            <number name="Text encoding" id="1926" type="integer" length="1"/>
            <string name="Language" id="1927" type="fixed-length" length="3"/>
            <string name="Content descriptor" id="1928" type="zero-terminated"/>
            <string name="Lyrics/text" id="1929" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="ID3v2.3 URL link frame" id="1931" extends="id:453" valueexpression="URL">
            <description>With these frames dynamic data such as webpages with touring information, price information or plain ordinary news can be added to the tag. There may only be one URL link frame of its kind in an tag, except when stated otherwise in the frame description. If the textstring is followed by a termination ($00 (00)) all the following information should be ignored and not be displayed. All URL link frame identifiers begins with &quot;W&quot;. Only URL link frame identifiers begins with &quot;W&quot;.</description>
            <string name="Frame ID" id="1932" type="fixed-length"/>
            <number name="Size" id="1933" type="integer"/>
            <string name="URL" id="1942" type="fixed-length"/>
        </structure>
        <structure name="WCOM Frame - Commercial information" id="435" extends="id:1931">
            <description>The 'Commercial information' frame is a URL pointing at a webpage with information such as where the album can be bought. There may be more than one &quot;WCOM&quot; frame in a tag, but not with the same content.</description>
            <string name="Frame ID" id="1944" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WCOM" value="WCOM"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WCOP Frame - Copyright/Legal information" id="437" extends="id:1931">
            <description>The 'Copyright/Legal information' frame is a URL pointing at a webpage where the terms of use and ownership of the file is described.</description>
            <string name="Frame ID" id="1956" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WCOP" value="WCOP"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WOAF Frame - Official audio file webpage" id="439" extends="id:1931">
            <description>The 'Official audio file webpage' frame is a URL pointing at a file specific webpage.</description>
            <string name="Frame ID" id="1968" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WOAF" value="WOAF"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WOAR Frame - Official artist/performer webpage" id="441" extends="id:1931">
            <description>The 'Official artist/performer webpage' frame is a URL pointing at the artists official webpage. There may be more than one &quot;WOAR&quot; frame in a tag if the audio contains more than one performer, but not with the same content.</description>
            <string name="Frame ID" id="1980" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WOAR" value="WOAR"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WOAS Frame - Official audio source webpage" id="443" extends="id:1931">
            <description>The 'Official audio source webpage' frame is a URL pointing at the official webpage for the source of the audio file, e.g. a movie.</description>
            <string name="Frame ID" id="1992" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WOAS" value="WOAS"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WORS Frame - Official internet radio station homepage" id="445" extends="id:1931">
            <description>The 'Official internet radio station homepage' contains a URL pointing at the homepage of the internet radio station.</description>
            <string name="Frame ID" id="2004" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WORS" value="WORS"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WPAY Frame - Payment" id="447" extends="id:1931">
            <description>The 'Payment' frame is a URL pointing at a webpage that will handle the process of paying for this file.</description>
            <string name="Frame ID" id="2016" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WPAY" value="WPAY"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WPUB Frame - Publishers official webpage" id="449" extends="id:1931">
            <description>The 'Publishers official webpage' frame is a URL pointing at the official wepage for the publisher.</description>
            <string name="Frame ID" id="2028" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WPUB" value="WPUB"/>
                </fixedvalues>
            </string>
        </structure>
        <structure name="WXXX Frame - User defined URL link frame" id="451" extends="id:453" valueexpression="URL">
            <description>This frame is intended for URL links concerning the audiofile in a similar way to the other &quot;W&quot;-frames. The frame body consists of a description of the string, represented as a terminated string, followed by the actual URL. The URL is always encoded with ISO-8859-1. There may be more than one &quot;WXXX&quot; frame in each tag, but only one with the same description.</description>
            <string name="Frame ID" id="2040" type="fixed-length">
                <fixedvalues>
                    <fixedvalue name="WXXX" value="WXXX"/>
                </fixedvalues>
            </string>
            <number name="Size" id="2041" type="integer"/>
            <structref name="Description" id="2071" structure="id:587"/>
            <string name="URL" id="2051" type="fixed-length" length="remaining"/>
        </structure>
        <structure name="Encoded String" id="587" encoding="ISO_8859-1:1987" endian="big" signed="no" valueexpression="Switch">
            <structure name="Switch" id="2053" order="variable" valueexpression="ISO String">
                <structref name="ISO String" id="2055" repeatmin="0" structure="id:2054"/>
                <structref name="Unicode String" id="2057" repeatmin="0" structure="id:2056"/>
            </structure>
        </structure>
        <structure name="String" id="2060" encoding="ISO_8859-1:1987" endian="big" signed="no" valueexpression="Text">
            <number name="Encoding" mustmatch="yes" id="2061" type="integer" length="1"/>
            <string name="Text" id="2062" type="zero-terminated"/>
        </structure>
        <structure name="ISO String" id="2054" extends="id:2060">
            <number name="Encoding" id="2064" type="integer">
                <fixedvalues>
                    <fixedvalue name="ISO-8859-1" value="0"/>
                </fixedvalues>
            </number>
        </structure>
        <structure name="Unicode String" id="2056" extends="id:2060">
            <number name="Encoding" id="2067" type="integer">
                <fixedvalues>
                    <fixedvalue name="UNICODE" value="1"/>
                </fixedvalues>
            </number>
            <string name="Text" id="2068" type="fixed-length" encoding="UTF-16"/>
        </structure>
    </grammar>
</ufwb>
