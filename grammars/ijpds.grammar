<?xml version="1.0" encoding="UTF-8"?>
<ufwb>
    <grammar name="Inkjet Printer Data Stream" start="IJPDS File" author="Andreas Pehnack" fileextension="ijpds">
        <description>Grammar for the Kodak Inkjet Printer Data Stream</description>
        <structure name="Defaults" encoding="IBM500" endian="big" signed="no">
            <description>
                Defines the default values.
            </description>
        </structure>
        <structure name="Record" length="this.Record Length" extends="Defaults" strokecolor="FF0000" fillcolor="FFFF00">
            <number name="Record Length" strokecolor="FFFFFF" fillcolor="FF00FF" length="2"/>
            <number name="Cyclic Record Count" length="1"/>
            <number name="Control Code" mustmatch="yes" length="1"/>
        </structure>
        <structure name="BOX" extends="Record">
            <description>
                The BOX record defines the size of an area that is to be filled with a black or white fill pattern. The fill pattern is placed in the page bitmap using the current logical function as defined by a previous SLF record or by the default function (OR).
                After this record, the cursor position is at the current X position and the current Y position plus the height of the box. The height and width of the box are in the upright orientation.
                Some KODAK VERSAMARK printers support clipping of the image created by a BOX record. Clipping means that if part of the box falls outside the buffer, the part that is in the buffer is printed and the cursor is moved. The cursor is moved as if the entire image was printed, even though it may fall outside the buffer. See Appendix C to determine if your printer supports clipping for the BOX record.
                If clipping is not supported and part of the box falls outside the buffer, none of the box is printed and the cursor is not moved.
                In both cases (clipping supported and clipping not supported), a message is generated only if the image falls outside the limits set by the RCR record (or the default range if no RCR). Refer to the RCR record description.
            </description>
            <number name="Control Code" fixedval="39"/>
            <number name="Height" length="2">
                <description>
                    An unsigned binary value representing the height of the box in dots. The range depends on the printer and the PLR record. The height is measured down the length of the page in the Y direction when looking at the substrate in the direction it is moving. For example, hex 00 37 specifies a box height of 55 dots.
                </description>
            </number>
            <number name="Width" length="2">
                <description>
                    An unsigned binary value representing the width of the box in dots. The range is printer and printhead dependent. For example, the range is 1-4096 for systems using four stitched 4-inch printheads and 1-1024 for systems with one 4-inch printhead. The width is measured across the width of the page in the X direction when looking at the substrate in the direction it is moving. For example, hex 06 A1 specifies a width of 1697 dots.
                </description>
            </number>
            <number name="Fill Pattern" length="1">
                <description>
                    A binary value that specifies the fill pattern. Hex 00 = white and hex 01 = black.
                </description>
            </number>
        </structure>
        <structure name="CBM" extends="Record">
            <description>
                The CBM record, which is interchangeable with the Image Bitmap (IBM) record, contains a compressed bitmap that is to be printed at the current cursor position according to the current logical function set by the last SLF record. The bitmap is placed on the page in the upright orientation.
                After this record, the cursor position is at the current X position and the current Y position plus the height of the bitmap.
            </description>
            <number name="Control Code" fixedval="62"/>
            <number name="Height" length="2">
                <description>
                    An unsigned binary value representing the height of the bitmap in dots. The range is printer dependent and also dependent upon the blocking of input data. The height is measured down the length of the page in the Y direction when looking at the substrate in the direction it is moving. For example, hex 00 37 specifies a bitmap height of 55 dots.
                </description>
            </number>
            <number name="Width" length="2">
                <description>
                    An unsigned binary value representing the width of the bitmap in dots. The range is printer dependent. For example, the range is 1-4096 for systems using four stitched 4-inch printheads and 1-1024 for systems with one 4-inch printhead. The width is measured across the width of the page in the X direction when looking at the substrate in the direction it is moving. For example, hex 06 A1 specifies a width of 1697 dots.
                </description>
            </number>
            <number name="Reserved" length="2">
                <description>
                    This field is not used and must contain all binary zeroes.
                </description>
            </number>
            <number name="Compression Type" length="2">
                <description>
                    Specifies the compression algorithm used to compress the bitmapped character data. Undefined or unsupported compression types will cause the imager to display an error message and stop printing.
                </description>
                <fixedvalue value="0">
                    <description>
                        Reserved
                    </description>
                </fixedvalue>
                <fixedvalue name="RLEV32" value="1">
                    <description>
                        32-bit Vertical Run Length Encoding (RLEV32)
                    </description>
                </fixedvalue>
            </number>
            <binary name="Compression Parameter" length="4">
                <description>
                    The meaning of these bytes depends on the compression type specified in bytes 10-11.
                </description>
            </binary>
            <binary name="Bitmap">
                <description>
                    The bitmap is always imaged upright into the frame buffer at the current position and according to the current logical function. The cursor position following this command will be left at the current X position and at the current Y position plus the height of the bitmap.
                    Should the compressed bitmap contain more or less uncompressed data than what is specified by the Height and Width fields, the imager will display an error message and imaging will stop.
                    The compressed bitmap begins at byte position 17 and is arranged in horizontal raster format compressed using the compression method specified in byte positions 11 and 12. Each row of the raster must be padded to the right with binary zeroes (before compression) to make an integral number of 32-bit segments. The width of the bitmap (byte positions 7 and 8) does not have to be a multiple of 32 bits but the bitmap raster row length does.
                </description>
            </binary>
        </structure>
        <structure name="Character Definition" extends="Record">
            <number name="Character Identifier" length="2">
                <description>
                    A binary code that identifies the character defined in this record. This is the code that must be used in the input data to access this character for printing. The range is 0 to 255 for single byte fonts or 0 to 65535 for double-byte fonts.
                </description>
            </number>
            <number name="Options" length="1">
                <description>
                    The bits in position 6 define options available for this character.
                </description>
                <mask name="Default character bit" value="0x80">
                    <description>
                        Defines if this character is the font's default character.
                    </description>
                    <fixedvalue name="Not Default Character" value="0x0">
                        <description>
                            This character is not defined as this font's default character.
                        </description>
                    </fixedvalue>
                    <fixedvalue name="Default Character" value="0x80">
                        <description>
                            This character is defined as this font's default character. If a default character is defined, it must be the first character defined in the font, or unexpected results may occur. The default character becomes the character used for all undefined characters, including character 00.
                        </description>
                    </fixedvalue>
                </mask>
                <mask name="Continuation bit" value="0x40">
                    <description>
                        Defines if the pattern for this character is continued in the next CCD record.
                    </description>
                    <fixedvalue name="No Continuation" value="0x0">
                        <description>
                            The pattern for this character is not continued in the next CCD record.
                        </description>
                    </fixedvalue>
                    <fixedvalue name="Continuation" value="0x40">
                        <description>
                            The pattern for this character is continued in the next CCD record. The continuation record looks identical to the previous record except that the pattern is different and the continuation bit is off unless the pattern is continued to the next CCD record.
                        </description>
                    </fixedvalue>
                </mask>
            </number>
            <number name="Reserved" length="1">
                <description>
                    This field is unused and must contain all binary zeros.
                </description>
            </number>
            <number name="Width" length="2">
                <description>
                    A binary number representing the width of the uncompressed character data to be combined into the RIP frame buffer. The range is 0 to 65535, although the practical size is limited by the page size and font memory limitations of the data station.
                </description>
            </number>
            <number name="Height" length="2">
                <description>
                    A binary number representing the height of the uncompressed character data to be combined into the RIP frame buffer. The range is 0 to 65535, although the practical size is limited by the page size and font memory limitations of the data station.
                    Each character may have a different height and width, eliminating the need to supply data to position the character inside the character cell. If the CCD has a width or height of zero, a blank character is defined. No data is combined into the frame buffer of the RIP for characters with a width and/or height of zero.
                </description>
            </number>
            <number name="X Offset" length="4" signed="yes">
                <description>
                    A signed binary number that defines the number of dots to the left side of the bounding box of the character from the X position of the current cursor. The X offset moves relative to the fontÃ¢ÂÂs orientation. The range is -2,147,483,647 to 2,147,483,647, although useful values are limited by the page size of the RIP or Super RIP.
                </description>
            </number>
            <number name="Y Offset" length="4" signed="yes">
                <description>
                    A signed binary number that defines the number of dots to the top side of the bounding box of the character from the Y position of the current cursor. The Y offset moves relative to the fontÃ¢ÂÂs orientation. The range is -2,147,483,647 to 2,147,483,647, although useful values are limited by the page size of the RIP or Super RIP.
                </description>
            </number>
            <number name="X Escapement" length="4">
                <description>
                    A signed binary number that defines the direction and distance to the left side of the next character cell from the X position of the current character. The X escapement moves relative to the fontÃ¢ÂÂs orientation. The range is -2,147,483,647 to 2,147,483,647, although useful values are limited by the page size of the RIP or Super RIP.
                </description>
            </number>
            <number name="Y Escapement" length="4">
                <description>
                    A signed binary number that defines the direction and distance to the starting position of the next character cell from the Y position of the current character. The Y escapement moves relative to the fontÃ¢ÂÂs orientation. The range is -2,147,483,647 to 2,147,483,647, although useful values are limited by the page size of the RIP or Super RIP.
                </description>
            </number>
        </structure>
        <structure name="CCD" extends="Character Definition">
            <description>
                CCD records, which are interchangeable with Character Definition with Metrics (CDM) records, follow an SFM or FDM record and define each character in the font. The CCDs contain the bitmap patterns for the characters. Up to 256 characters can be defined for each FDM and up to 65,536 characters for an SFM.
                Usually, there is one CCD for each character. However, in some fonts, a continuation CCD is used to divide a character bitmap into two or more records if it is necessary to limit the size of the records (because of block length restrictions or other reasons). The character bitmap can be broken only at the end of a row. When continuation CCDs are used, all fields up to the bitmap pattern field must be the same in each CCD for the character except for the continuation bit in the last CCD.
                When an SFM or FDM is received, the printer defines null and default characters in the following manner. When an SFM or FDM is first processed by the printer, all characters in the font are set as null characters. If the first CCD received has the default bit set, then the character in this record is used as the default character. The default character is used for all undefined characters in the font, including character 00. Subsequent CCDs then redefine the characters for their respective character identifiers. If the first CCD does not have the default character bit set, then all characters remain null until redefined by subsequent CCDs.
                A null character has zero width and height, zero X and Y escapement, and takes no space when printed.

                Characters that cannot be compressed into a single CCD record must be continued in one or more additional consecutive CCD records. The compressed data must be divided among the continued records so that the smallest unit of data is not divided between two CCD records. For example, a CCD record compressed with RLEV32 must contain an integral number of 32-bit words in the data pattern and a Ã¢ÂÂrunÃ¢ÂÂ cannot be divided between multiple CCDs.
                Should the character definition (including any continuation) contain more or less uncompressed data than what is specified by the Height and Width fields, the imager will display an error message and the font download will stop. A character definition must be completed for a given logical input RIP before any other character definitions are started.
            </description>
            <number name="Control Code" fixedval="61"/>
            <number name="Reserved2" length="2">
                <description>
                    This field is unused and must contain all binary zeros.
                </description>
            </number>
            <number name="Compression Type" length="2">
                <description>
                    Specifies the compression algorithm used to compress the bitmapped character data. Undefined or unsupported compression types will cause an error message to be displayed and the font download will stop.
                </description>
                <fixedvalue value="0">
                    <description>
                        Reserved
                    </description>
                </fixedvalue>
                <fixedvalue value="1">
                    <description>
                        32-bit Vertical Run Length Encoding (RLEV32)
                    </description>
                </fixedvalue>
            </number>
            <number name="Compression Parameter" length="4" display="hex">
                <description>
                    The meaning of these bytes depends on the compression type specified in bytes 30-31.
                </description>
            </number>
            <binary name="Compressed Character Pattern">
                <description>
                    Only the upright orientation is supported. Use of rotated characters in this record will produce incorrect results.
                    The character pattern data for upright characters is stored compressed and then decompressed when imaged. During imaging, the high order bit of the first decompressed byte/word controls the dot in the top left corner of the character bounding box, and subsequent bits in the same decompressed byte/word control adjacent dots in left to right order.
                    The compressed character pattern begins at byte position 37 and is arranged in horizontal raster format compressed using the compression method specified in byte positions 31 and 32. Each row of the raster must be padded to the right with binary zeroes (before compression) to make an integral number of 32-bit segments. The width of the uncompressed character data (byte positions 9 and 10) does not have to be a multiple of 32 bits but the raster row length does.
                </description>
            </binary>
        </structure>
        <structure name="CDM" extends="Character Definition">
            <description>
                CDM records, which are interchangeable with CCD records, follow an SFM or FDM record and define each character in the font. The CDMs contain the bitmap patterns for the characters. Up to 256 characters can be defined for each FDM and up to 65,536 characters for an SFM.
                Usually, there is one CDM for each character. However, in some fonts, a continuation CDM is used to divide a character bitmap into two or more records if it is necessary to limit the size of the records (because of block length restrictions or other reasons). The character bitmap can be broken only at the end of a row. When continuation CDMs are used, all fields up to the bitmap pattern field must be the same in each CDM for the character except for the continuation bit in the last CDM.
                When an SFM or FDM is received, the printer defines null and default characters in the following manner. When an SFM or FDM is first processed by the printer, all characters in the font are set as null characters. If the first CDM received has the default bit set, then the character in this record is used as the default character. The default character is used for all undefined characters in the font, including character 00. Subsequent CDMs then redefine the characters for their respective character identifiers. If the first CDM does not have the default character bit set, then all characters remain null until redefined by subsequent CDMs.
                A null character has zero width and height, zero X and Y escapement, and takes no space when printed.
            </description>
            <number name="Control Code" fixedval="48"/>
            <binary name="Bitmap Pattern">
                <description>
                    This field contains the bitmap pattern for the character defined by this CDM. Each row of the pattern contains an integral number of 16-bit segments. The number of rows is determined by the height field (bytes 11-12). The number of 16-bit segments per row is determined by the width field (bytes 9-10). For example, if the height is 21 and the width is 28, this field must contain 21 rows consisting of two 16-bit segments each (42 16-bit segments or 84 bytes).
                    The high-order bit in this field (bit hex 80 in byte position 29) controls the dot in the top left corner of the character bounding box. Subsequent bits in the same segment control dots in a left-to- right order in the first row of the character. The first dot in the second row of the character is controlled by the high-order bit of the nth 16-bit segment, where n is the number of segments per row plus one.
                    Each row must be padded to the right with binary zeroes.
                    If the character pattern will not fit in a block, a continuation CDM must be used. An integral number of rows must be used in each CDM record.
                </description>
            </binary>
        </structure>
        <structure name="CDR" extends="Record">
            <description>
                CDR records follow the FDR record and define each character in the font. The CDRs contain the bitmap patterns for the characters. Up to 256 characters can be defined for each FDR. Usually, there is one CDR for each character. However, in some fonts, a continuation CDR is used to divide a character bitmap into two or more records if it is necessary to limit the size of the records (because of block length restrictions or other reasons). The character bitmap can be broken only at the end of a row. When continuation CDRs are used, all fields up to the bitmap pattern field must be the same in each CDR for the character except for the continuation bit in the last CDR.
                As an option, a single CDR may immediately follow an SFD to define the default character for any undefined character in the super font.
                When an FDR is received, the printer defines null and default characters in the following manner. When an FDR is first processed by the printer, all 256 characters in the font are set as null characters. If the first CDR received has a hex 00 in the Character Identifier field, then the character in this record is used as the default character for character identifiers hex 01 through FF (character 00 remains a null character). Subsequent CDRs then redefine the characters for their respective character identifiers. Character 00 can be redefined from the null character in this manner. If the first CDR does not have a hex 00 in the Character Identifier field, then all characters remain null until redefined by subsequent CDRs.
                A null character has zero width, and takes no space when printed.
            </description>
            <number name="Control Code" fixedval="20"/>
            <number name="Character Identifier" length="1">
                <description>
                    A binary code that identifies the character defined in this record. This is the code that must be used in the input data to access this character for printing. The range is 0 - 255.
                </description>
            </number>
            <number name="Equivalent Character Identifier" length="1">
                <description>
                    A binary code that identifies a character in the font that has a bitmap pattern identical to this character. If 2 characters are the same, it is not necessary to repeat the bitmap pattern. The &quot;Equivalent&quot; bit in byte position 8 must be set for this field to be in effect.
                    If the equivalent bit is set, the character defined in this field is part of the font currently being defined unless another font is identified in byte 9 or in bytes 9 and 10. If byte 9 identifies a regular font, then byte 10 (if present) is ignored. If byte 9 identifies a super font, then byte 10 must be present and identifies the subfont. In any case, the character must have been previously loaded in the same RIP.
                </description>
            </number>
            <number name="Segment Count" length="1">
                <description>
                    A binary number that specifies the number of 16-bit segments required to define one horizontal row of the character bitmap. The final segment does not have to be completely used. The &quot;Final segment width&quot; bits in position 8 define how many bits in the final segment are used. All binary zeroes (hex 00) in position 7 indicate a null character with zero width.
                </description>
            </number>
            <number name="Options" length="1">
                <description>
                    The bits in position 8 define options available for this character. Bit 0 is the high order bit (hex 80) and bit 7 is the low order bit (hex 01). Bit assignments are as follows.
                </description>
            </number>
            <binary name="Bitmap Pattern">
                <description>
                    The bitmap pattern for the character defined by this CDR. The pattern data consists of m rows, each containing s 16-bit segments, where m is the font height (row count) defined in bytes 5-6 of the FDR, and s is the segment count defined in byte 7 of the CDR.
                    Each row must be padded to the right with binary zeroes.
                    If the equivalent bit in byte position 8 is set, this field can contain font or super font identifiers. Refer to the description for the Equivalent Character Identifier field (byte position 6).
                    If the character pattern will not fit in a block, a continuation CDR must be used. An integral number of rows must be used in each CDR record.
                </description>
            </binary>
        </structure>
        <structure name="CSR" extends="Record">
            <description>
                The CSR record restores the cursor position to the last position stored by a CSS record for the specified number. The restore number in this record references the save number in the CSS record.
                If a cursor position was not stored for the number specified in the CSR record, the cursor is set to the default position (0,0).
                The CSR record does not reset the saved cursor position it restores. Successive CSR records for the same position number, without an intermediate CSS record, set the cursor to the same saved position.
            </description>
            <number name="Control Code" fixedval="55"/>
            <number name="Restore Number" length="1">
                <description>
                    A binary number that identifies the saved cursor position. The range is 0-15, allowing 15 cursor positions to be restored. Restore number 0 always sets the cursor position to 0,0.
                </description>
            </number>
        </structure>
        <structure name="CSS" extends="Record">
            <number name="Control Code" fixedval="54"/>
            <number name="Save Number" length="1"/>
        </structure>
        <structure name="EFF" extends="Record">
            <number name="Control Code" fixedval="2"/>
            <number name="Maximum Line Width" length="2"/>
        </structure>
        <structure name="EOJ" extends="Record">
            <number name="Control Code" fixedval="9"/>
            <string name="Message" type="zero-terminated"/>
        </structure>
        <structure name="FAR" extends="Record">
            <number name="Control Code" fixedval="37"/>
            <number name="Number of Fonts" length="2"/>
            <number name="Default Font" length="2"/>
            <structure name="Font Assignment" repeatmax="unlimited">
                <number name="Font Number" length="2"/>
                <string name="Font Name" type="fixed-length" length="8"/>
            </structure>
        </structure>
        <structure name="FDR" extends="Record">
            <number name="Control Code" fixedval="19"/>
            <number name="Row Count" length="2"/>
            <number name="Reserved" length="1"/>
            <number name="Interline Spacing (ILS)" length="1"/>
            <number name="Font Rotation" length="1"/>
            <number name="Font Number" length="1"/>
            <string name="Font Name" type="fixed-length" length="8"/>
        </structure>
        <structure name="FDM" extends="Record">
            <number name="Control Code" fixedval="46"/>
            <number name="X Escapement" length="4"/>
            <number name="Y Escapement" length="4"/>
            <number name="Font Rotation" length="1"/>
            <number name="Font Number" length="1"/>
            <string name="Font Name" type="fixed-length" length="8"/>
        </structure>
        <structure name="GFF" extends="Record">
            <number name="Control Code" fixedval="15"/>
            <number name="Record Displacement" length="1"/>
            <number name="Records Executed" length="1"/>
        </structure>
        <structure name="IBM" extends="Record">
            <number name="Control Code" fixedval="41"/>
            <number name="Height" length="2"/>
            <number name="Width" length="2"/>
            <number name="Reserved" length="2"/>
            <binary name="Bitmap"/>
        </structure>
        <structure name="IML" extends="Record">
            <number name="Control Code" fixedval="12"/>
            <binary name="Print Line"/>
        </structure>
        <structure name="JC2" extends="Record">
            <number name="Control Code" fixedval="36"/>
            <number name="Reserved" length="2"/>
            <number name="Even" length="1" display="hex"/>
            <binary name="Reserved" length="8"/>
            <number name="RIP Configuration" length="2" display="hex"/>
            <binary name="Reserved2" length="10"/>
            <number name="Stitched RIP Indicator" length="1" display="hex"/>
            <structure name="RIPs">
                <number name="Stitched" repeatmin="16" repeatmax="16" length="4" display="hex"/>
            </structure>
            <binary name="Reserved3" length="51"/>
            <binary name="Security Code" length="8"/>
            <string name="Job Information" type="fixed-length" length="23"/>
            <string name="Data Prep Date" type="fixed-length" length="14"/>
            <string name="Data Prep Time" type="fixed-length" length="14"/>
            <binary name="Reserved4" length="2"/>
            <string name="Job Identifier" type="fixed-length" length="8"/>
        </structure>
        <structure name="JCR" extends="Record">
            <number name="Control Code" fixedval="0"/>
            <number name="Printhead Description" length="1"/>
            <number name="Print Resolution" length="1"/>
            <binary name="Reserved" length="7"/>
            <number name="Default Font" length="1"/>
            <binary name="Reserved" length="3"/>
            <number name="Print Density" length="1"/>
            <string name="Font Names" type="fixed-length" length="128"/>
            <binary name="Security Code" length="4"/>
            <string name="Job Information" type="fixed-length" length="23"/>
            <string name="Data Prep Date" type="fixed-length" length="14"/>
            <string name="Data Prep Time" type="fixed-length" length="14"/>
            <binary name="Reserved4" length="2"/>
            <string name="Job Identifier" type="fixed-length" length="8"/>
        </structure>
        <structure name="LFF" extends="Record">
            <number name="Control Code" fixedval="1"/>
            <number name="File Number" length="2"/>
        </structure>
        <structure name="MPL" extends="Record">
            <number name="Control Code" fixedval="53"/>
            <number name="Mode" length="1"/>
        </structure>
        <structure name="MSG" extends="Record">
            <number name="Control Code" fixedval="10"/>
        </structure>
        <structure name="NOP" extends="Record">
            <number name="Control Code" fixedval="34"/>
        </structure>
        <structure name="RIP" extends="Record">
            <number name="Control Code" fixedval="35"/>
            <number name="RIP Number" length="1" display="hex"/>
        </structure>
        <structure name="PHR" extends="Record">
            <number name="Control Code" fixedval="38"/>
            <number name="Print Resolution - X Direction" length="2"/>
            <number name="Print Resolution - Y Direction" length="2"/>
            <number name="Number of Printheads" length="2"/>
            <structure name="Printhead Information" repeatmax="unlimited">
                <number name="Number of Jets" length="2"/>
                <number name="Number of Drops" length="2"/>
                <number name="Relative Printhead Position" length="2"/>
                <binary name="Reserved" length="2"/>
            </structure>
        </structure>
        <structure name="PLR" extends="Record">
            <number name="Control Code" fixedval="59"/>
            <number name="Page Length Requirement" length="4"/>
        </structure>
        <structure name="RCR" extends="Record">
            <number name="Control Code" fixedval="50"/>
            <number name="Top Limit" length="4"/>
            <number name="Bottom Limit" length="4"/>
            <number name="Left Limit" length="4"/>
            <number name="Right Limit" length="4"/>
        </structure>
        <structure name="RFF" extends="Record">
            <number name="Control Code" fixedval="14"/>
            <number name="Record Displacement" length="1"/>
            <number name="Records Executed" length="1"/>
            <number name="Reserved" length="1"/>
            <number name="Fixed File Number" length="1"/>
        </structure>
        <structure name="RSRC" extends="Record">
            <number name="Control Code" fixedval="63"/>
            <number name="Resource Type" length="1"/>
            <number name="Reserved" length="3"/>
            <string name="Resource Name" type="zero-terminated"/>
        </structure>
        <structure name="SDC" extends="Record">
            <number name="Control Code">
                <fixedvalue value="5">
                    <description>
                        SDC record without security
                    </description>
                </fixedvalue>
                <fixedvalue value="17">
                    <description>
                        Security version of the SDC record
                    </description>
                </fixedvalue>
            </number>
            <number name="Vertical Space" length="2"/>
            <number name="Document Counter" length="4"/>
            <number name="User Output Signals" length="2"/>
            <number name="Starting Font Number" length="1"/>
            <number name="Starting ILS" length="1"/>
            <number name="Starting Fixed File Number" length="1"/>
            <number name="Reserved" length="1"/>
            <string name="Job Identifier" type="fixed-length" length="8"/>
        </structure>
        <structure name="SFD" extends="Record">
            <number name="Control Code" fixedval="42"/>
            <number name="Row Count" length="2"/>
            <number name="Reserved" length="1"/>
            <number name="Interline Spacing (ILS)" length="1"/>
            <number name="Font Rotation" length="1"/>
            <number name="Super Font Number" length="1"/>
            <string name="Super Font Name" type="fixed-length" length="8"/>
        </structure>
        <structure name="SFF" extends="RFF">
            <number name="Control Code" fixedval="13"/>
        </structure>
        <structure name="SFM" extends="Record">
            <number name="Control Code" fixedval="47"/>
            <number name="X Escapement" length="4"/>
            <number name="Y Escapement" length="4"/>
            <number name="Font Rotation" length="1"/>
            <number name="Super Font Number" length="1"/>
            <string name="Super Font Name" type="fixed-length" length="8"/>
        </structure>
        <structure name="SFS" extends="Record">
            <number name="Control Code" fixedval="49"/>
            <number name="Font Number" length="1"/>
            <number name="Reserved" length="1"/>
            <number name="X Line Spacing" length="4"/>
            <number name="Y Line Spacing" length="4"/>
            <number name="X Character Spacing" length="4"/>
            <number name="Y Character Spacing" length="4"/>
        </structure>
        <structure name="SFT" extends="Record">
            <number name="Control Code" fixedval="44"/>
            <number name="Font Number" length="1"/>
            <number name="Interline Spacing (ILS)" length="1"/>
        </structure>
        <structure name="SFI" extends="SFT">
            <number name="Control Code" fixedval="11"/>
            <binary name="Print Line"/>
        </structure>
        <structure name="SIL" extends="SFT">
            <number name="Control Code" fixedval="43"/>
            <binary name="Print Line"/>
        </structure>
        <structure name="SLF" extends="Record">
            <number name="Control Code" fixedval="40"/>
            <number name="Function" length="1"/>
        </structure>
        <structure name="SOD" extends="Record">
            <number name="Control Code">
                <fixedvalue value="4">
                    <description>
                        SOD record without security
                    </description>
                </fixedvalue>
                <fixedvalue value="16">
                    <description>
                        Security version of the SOD record
                    </description>
                </fixedvalue>
            </number>
            <number name="Vertical Space" length="2"/>
            <number name="Document Counter" length="4"/>
            <number name="User Output Signals" length="2"/>
            <number name="Starting Font Number" length="1"/>
            <number name="Starting ILS" length="1"/>
            <number name="Starting Fixed File Number" length="1"/>
            <number name="Reserved" length="1"/>
            <string name="Job Identifier" type="fixed-length" length="8"/>
        </structure>
        <structure name="SOP" extends="Record">
            <number name="Control Code" fixedval="32"/>
        </structure>
        <structure name="SOR" extends="Record">
            <number name="Control Code" fixedval="52"/>
        </structure>
        <structure name="SPC" extends="Record">
            <number name="Control Code" fixedval="7"/>
            <number name="Vertical Space" length="2"/>
        </structure>
        <structure name="SPL" extends="Record">
            <number name="Control Code" fixedval="58"/>
            <number name="Page Length" length="2"/>
        </structure>
        <structure name="SPO" extends="Record">
            <number name="Control Code" fixedval="33"/>
            <number name="X Position" length="2"/>
            <number name="Y Position" length="2"/>
        </structure>
        <structure name="SPX" extends="Record">
            <number name="Control Code" fixedval="33"/>
            <number name="X Position" length="4"/>
            <number name="Y Position" length="4"/>
        </structure>
        <structure name="SRM" extends="Record">
            <number name="Control Code" fixedval="57"/>
            <number name="Resolution Exponent" length="1"/>
        </structure>
        <structure name="SRP" extends="Record">
            <number name="Control Code" fixedval="56"/>
            <number name="X Value" length="4"/>
            <number name="Y Value" length="4"/>
        </structure>
        <structure name="STP" extends="MSG">
            <number name="Control Code" fixedval="8"/>
        </structure>
        <structure name="UIL" extends="Record">
            <number name="Control Code" fixedval="51"/>
            <number name="Start of String" length="2"/>
            <number name="String Length" length="2"/>
        </structure>
        <structure name="VCC" extends="Record">
            <number name="Control Code" fixedval="45"/>
            <number name="Checksum" length="4"/>
        </structure>
        <structure name="WFC" extends="Record">
            <number name="Control Code" fixedval="6"/>
            <number name="Vertical Space" length="2"/>
        </structure>
        <structure name="Block" length="4096" extends="Defaults" fillcolor="FFFF7F">
            <structure name="Data" length="this.Block Length">
                <number name="Block Length" strokecolor="FFFFFF" fillcolor="FF00FF" length="2"/>
                <structure name="Records" consists-of="Record" repeatmax="unlimited" order="variable">
                    <structref name="BOX" repeatmin="0"/>
                    <structref name="CBM" repeatmin="0"/>
                    <structref name="CCD" repeatmin="0"/>
                    <structref name="CDM" repeatmin="0"/>
                    <structref name="CDR" repeatmin="0"/>
                    <structref name="CSR" repeatmin="0"/>
                    <structref name="CSS" repeatmin="0"/>
                    <structref name="EOJ" repeatmin="0"/>
                    <structref name="FAR" repeatmin="0"/>
                    <structref name="FDR" repeatmin="0"/>
                    <structref name="FDM" repeatmin="0"/>
                    <structref name="GFF" repeatmin="0"/>
                    <structref name="IBM" repeatmin="0"/>
                    <structref name="IML" repeatmin="0"/>
                    <structref name="JC2" repeatmin="0"/>
                    <structref name="JCR" repeatmin="0"/>
                    <structref name="LFF" repeatmin="0"/>
                    <structref name="MSG" repeatmin="0"/>
                    <structref name="NOP" repeatmin="0"/>
                    <structref name="RIP" repeatmin="0"/>
                    <structref name="PHR" repeatmin="0"/>
                    <structref name="PLR" repeatmin="0"/>
                    <structref name="RCR" repeatmin="0"/>
                    <structref name="RFF" repeatmin="0"/>
                    <structref name="RSRC" repeatmin="0"/>
                    <structref name="SDC" repeatmin="0"/>
                    <structref name="SFD" repeatmin="0"/>
                    <structref name="SFF" repeatmin="0"/>
                    <structref name="SFI" repeatmin="0"/>
                    <structref name="SFM" repeatmin="0"/>
                    <structref name="SFS" repeatmin="0"/>
                    <structref name="SFT" repeatmin="0"/>
                    <structref name="SIL" repeatmin="0"/>
                    <structref name="SLF" repeatmin="0"/>
                    <structref name="SOD" repeatmin="0"/>
                    <structref name="SOP" repeatmin="0"/>
                    <structref name="SOR" repeatmin="0"/>
                    <structref name="SPC" repeatmin="0"/>
                    <structref name="SPL" repeatmin="0"/>
                    <structref name="SPO" repeatmin="0"/>
                    <structref name="SPX" repeatmin="0"/>
                    <structref name="SRM" repeatmin="0"/>
                    <structref name="SRP" repeatmin="0"/>
                    <structref name="STP" repeatmin="0"/>
                    <structref name="UIL" repeatmin="0"/>
                    <structref name="VCC" repeatmin="0"/>
                    <structref name="WFC" repeatmin="0"/>
                </structure>
            </structure>
        </structure>
        <structure name="IJPDS File" extends="Defaults" consists-of="Block" strokecolor="7F007F">
            <description>
                The whole file.
            </description>
            <structref name="Block" repeatmin="0" repeatmax="unlimited"/>
        </structure>
    </grammar>
</ufwb>
