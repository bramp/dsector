<?xml version="1.0" encoding="UTF-8"?>
<ufwb version="1.3.0">
    <grammar name="ZIP" start="id:25" author="Devon Stewart" fileextension="zip" uti="public.zip-archive">
        <description>Grammar for ZIP files</description>
        <structure name="ZIP file" id="25" encoding="ISO_8859-1:1987" endian="little" signed="no" debug="yes">
            <scriptelement name="JumpToEnd" id="26">
                <script name="unnamed" type="Generic">
                    <source language="Lua">byteView = currentMapper:getCurrentByteView()
 
fileLength = byteView:getLength()

currentGrammar = currentMapper:getCurrentGrammar()

-- get the structure we want to apply
structure = currentGrammar:getStructureByName(&quot;ZIP end of central directory record&quot;)

bytesProcessed = currentMapper:mapStructureAtPosition(structure, fileLength-22, 22)
</source>
                </script>
            </scriptelement>
        </structure>
        <structure name="ZIP local file header" id="28" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <binary name="Local file header signature" mustmatch="yes" id="29" length="4">
                <fixedvalues>
                    <fixedvalue name="Signature" value="504B0304"/>
                </fixedvalues>
            </binary>
            <number name="Version needed to extract (minimum)" id="30" strokecolor="FF1E17" type="integer" length="2" minval="0" maxval="255"/>
            <number name="General purpose bit flag" id="31" type="integer" length="2">
                <mask name="Encrypted" value="0x1">
                    <fixedvalue name="Encrypted" value="0x1"/>
                    <fixedvalue name="Not encrypted" value="0x0"/>
                </mask>
                <mask name="Sliding dict" value="0x2">
                    <fixedvalue name="4K sliding dict" value="0x0"/>
                    <fixedvalue name="8K sliding dict" value="0x2"/>
                </mask>
                <mask name="Shannon-Fano trees" value="0x4">
                    <fixedvalue name="2 trees" value="0x0"/>
                    <fixedvalue name="3 trees" value="0x4"/>
                </mask>
                <mask name="Data descriptor" value="0x8">
                    <fixedvalue name="No descriptor" value="0x0"/>
                    <fixedvalue name="Descriptor present" value="0x8"/>
                </mask>
            </number>
            <number name="Compression method" id="32" type="integer" length="2">
                <fixedvalues>
                    <fixedvalue name="Stored" value="0"/>
                    <fixedvalue name="Shrunk" value="1"/>
                    <fixedvalue name="Reduced with factor 1" value="2"/>
                    <fixedvalue name="Reduced with factor 2" value="3"/>
                    <fixedvalue name="Reduced with factor 3" value="4"/>
                    <fixedvalue name="Reduced with factor 4" value="5"/>
                    <fixedvalue name="Imploded" value="6"/>
                    <fixedvalue name="Reserved for Tokenizing" value="7"/>
                    <fixedvalue name="Deflated" value="8"/>
                    <fixedvalue name="Deflate64" value="9"/>
                    <fixedvalue name="PKWARE Data Compression Lib" value="10"/>
                    <fixedvalue name="Reserved by PKWARE" value="11"/>
                    <fixedvalue name="BZIP2" value="12"/>
                    <fixedvalue name="Reserved by PKWARE" value="13"/>
                    <fixedvalue name="LZMA (EFS)" value="14"/>
                    <fixedvalue name="Reserved by PKWARE" value="15"/>
                    <fixedvalue name="Reserved by PKWARE" value="16"/>
                    <fixedvalue name="Reserved by PKWARE" value="17"/>
                    <fixedvalue name="IBM TERSE (new)" value="18"/>
                    <fixedvalue name="IBM LZ77 z Architecture (PFS)" value="19"/>
                    <fixedvalue name="WavPack compressed data" value="20"/>
                    <fixedvalue name="PPMd version I, Rev 1" value="98"/>
                </fixedvalues>
            </number>
            <number name="File last modification time" id="33" type="integer" length="2"/>
            <number name="File last modification date" id="34" type="integer" length="2"/>
            <number name="CRC-32" id="35" type="integer" length="4" display="hex"/>
            <number name="Compressed_size" id="36" type="integer" length="4"/>
            <number name="Uncompressed size" id="37" type="integer" length="4"/>
            <number name="File_name_length" id="38" type="integer" length="2"/>
            <number name="Extra_field_length" id="39" type="integer" length="2"/>
            <string name="File Name" id="40" type="fixed-length" length="File_name_length"/>
            <structref name="ExtraFieldCollection" id="42" structure="id:41"/>
            <structure name="Compressed Data" id="43" length="prev.Compressed_size"/>
        </structure>
        <structure name="ZIP central directory file header" id="46" repeatmax="-1" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <number name="Signature" mustmatch="yes" id="47" type="integer" length="4" display="hex">
                <fixedvalues>
                    <fixedvalue name="Signature" value="0x2014B50"/>
                </fixedvalues>
            </number>
            <number name="Version made by" id="48" strokecolor="FF1E17" type="integer" length="2" display="hex">
                <fixedvalues>
                    <fixedvalue name="MS-DOS and OS/2" value="0x0"/>
                    <fixedvalue name="Amiga" value="0x1"/>
                    <fixedvalue name="OpenVMS" value="0x2"/>
                    <fixedvalue name="UNIX" value="0x3"/>
                    <fixedvalue name="VM/CMS" value="0x4"/>
                    <fixedvalue name="Atari ST" value="0x5"/>
                    <fixedvalue name="OS/2 H.P.F.S." value="0x6"/>
                    <fixedvalue name="Macintosh" value="0x7"/>
                    <fixedvalue name="Z-System" value="0x8"/>
                    <fixedvalue name="CP/M" value="0x9"/>
                    <fixedvalue name="Windows NTFS" value="0xA"/>
                    <fixedvalue name="MVS (OS/390 - Z/OS)" value="0xB"/>
                    <fixedvalue name="VSE" value="0xC"/>
                    <fixedvalue name="Acorn Risc" value="0xD"/>
                    <fixedvalue name="VFAT" value="0xE"/>
                    <fixedvalue name="alternate MVS" value="0xF"/>
                    <fixedvalue name="BeOS" value="0x10"/>
                    <fixedvalue name="Tandem" value="0x11"/>
                    <fixedvalue name="OS/400" value="0x12"/>
                    <fixedvalue name="OS/X (Darwin)" value="0x13"/>
                    <fixedvalue name="thru 255 - unused" value="0x14"/>
                </fixedvalues>
            </number>
            <number name="Version needed to extract (minimum)" id="49" type="integer" length="2"/>
            <number name="General purpose bit flag" id="50" type="integer" length="2">
                <mask name="Encrypted" value="0x1">
                    <fixedvalue name="Encrypted" value="0x1"/>
                    <fixedvalue name="Not encrypted" value="0x0"/>
                </mask>
                <mask name="Sliding dict" value="0x2">
                    <fixedvalue name="4K sliding dict" value="0x0"/>
                    <fixedvalue name="8K sliding dict" value="0x2"/>
                </mask>
                <mask name="Shannon-Fano trees" value="0x4">
                    <fixedvalue name="2 trees" value="0x0"/>
                    <fixedvalue name="3 trees" value="0x4"/>
                </mask>
                <mask name="Data descriptor" value="0x8">
                    <fixedvalue name="No descriptor" value="0x0"/>
                    <fixedvalue name="Descriptor present" value="0x8"/>
                </mask>
            </number>
            <number name="Compression method" id="51" type="integer" length="2"/>
            <number name="File last modification time" id="52" type="integer" length="2"/>
            <number name="File last modification date" id="53" type="integer" length="2"/>
            <number name="CRC-32" id="54" type="integer" length="4" display="hex"/>
            <number name="Compressed size" id="55" type="integer" length="4"/>
            <number name="Uncompressed size" id="56" type="integer" length="4"/>
            <number name="File_name_length" id="57" type="integer" length="2"/>
            <number name="Extra_field_length" id="58" type="integer" length="2"/>
            <number name="File_comment_length" id="59" type="integer" length="2"/>
            <number name="Disk_number_where_file_starts" id="60" type="integer" length="2"/>
            <number name="Internal file attributes" id="61" type="integer" length="2" display="hex"/>
            <number name="External file attributes" id="62" type="integer" length="4"/>
            <offset name="ZIP local file header" id="63" length="4" references="id:28" follownullreference="yes"/>
            <string name="FIle name" id="64" type="fixed-length" length="File_name_length"/>
            <structref name="ExtraFieldCollection" id="65" structure="id:41"/>
            <structure name="File comment" id="66" length="File_comment_length"/>
        </structure>
        <structure name="ZIP end of central directory record" id="69" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <number name="Signature" id="70" type="integer" length="4" display="hex">
                <fixedvalues>
                    <fixedvalue name="Signature" value="0x6054B50"/>
                </fixedvalues>
            </number>
            <number name="Number of this disk" id="71" type="integer" length="2"/>
            <number name="Disk where central directory starts" id="72" type="integer" length="2"/>
            <number name="Number of central directory records on this disk" id="73" type="integer" length="2"/>
            <number name="Total number of central directory records" id="74" type="integer" length="2"/>
            <number name="Size of central directory (bytes)" id="75" type="integer" length="4"/>
            <offset name="ZIP central directory file header" id="76" length="4" references="id:46" follownullreference="no"/>
            <number name="CommentLength" id="77" type="integer" length="2"/>
            <string name="FileComment" id="78" type="fixed-length" length="CommentLength"/>
        </structure>
        <structure name="Data descriptor" id="80" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <binary name="Optional Header" id="81" repeatmin="0" length="4">
                <fixedvalues>
                    <fixedvalue name="Header" value="504B0708"/>
                </fixedvalues>
            </binary>
            <binary name="CRC-32" id="82" length="4"/>
            <number name="Compressed_size" id="83" type="integer" length="4"/>
            <number name="Uncompressed size" id="84" type="integer" length="4"/>
        </structure>
        <structure name="ExtraField" id="86" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <number name="Header ID" id="87" type="integer" length="2" display="hex"/>
            <number name="DataSize" id="88" type="integer" length="2"/>
            <binary name="Data" id="89" length="DataSize"/>
        </structure>
        <structure name="ExtraField Zip64" id="91" extends="id:86">
            <number name="Header ID" mustmatch="yes" id="92" type="integer">
                <fixedvalues>
                    <fixedvalue name="ZIP64" value="0x1"/>
                </fixedvalues>
            </number>
            <number name="Original size" id="95" type="integer" length="8"/>
            <number name="Compressed size" id="96" type="integer" length="8"/>
            <number name="Relative Header Offset" id="97" type="integer" length="8"/>
            <number name="Disk Start Number" id="98" type="integer" length="4"/>
        </structure>
        <structure name="ExtraField Info-ZIP" id="100" alignment="0" extends="id:86" encoding="ISO_8859-1:1987" endian="big" signed="no" debug="yes">
            <number name="Header ID" mustmatch="yes" id="101" type="integer">
                <fixedvalues>
                    <fixedvalue name="Info-ZIP" value="0x5855"/>
                </fixedvalues>
            </number>
        </structure>
        <structure name="ExtraFieldCollection" id="41" length="Extra_field_length" encoding="ISO_8859-1:1987" endian="little" signed="no" order="variable" debug="yes">
            <structref name="ExtraField Zip64" id="105" repeatmin="0" structure="id:91"/>
            <structref name="ExtraField Info-ZIP" id="106" repeatmin="0" structure="id:100"/>
            <structref name="ExtraField" id="107" repeatmin="0" structure="id:86"/>
        </structure>
        <structure name="Data descriptor test" id="109" encoding="ISO_8859-1:1987" endian="big" signed="no">
            <scriptelement name="Data Descriptor" id="110">
                <script name="unnamed" type="Generic">
                    <source language="Lua">-- get collection with results so far
results = currentMapper:getCurrentResults()
logSrc = currentMapper:getCurrentLogSrc()

result = results:getResultByName(&quot;General purpose bit flag&quot;)

local function check_int(n)&#13;
 -- checking not float&#13;
 if(n - math.floor(n) &gt; 0) then&#13;
  error(&quot;trying to use bitwise operation on non-integer!&quot;)&#13;
 end&#13;
end&#13;
&#13;
local function to_bits(n)&#13;
 check_int(n)&#13;
 if(n &lt; 0) then&#13;
  -- negative&#13;
  return to_bits(bit.bnot(math.abs(n)) + 1)&#13;
 end&#13;
 -- to bits table&#13;
 local tbl = {}&#13;
 local cnt = 1&#13;
 while (n &gt; 0) do&#13;
  local last = math.mod(n,2)&#13;
  if(last == 1) then&#13;
   tbl[cnt] = 1&#13;
  else&#13;
   tbl[cnt] = 0&#13;
  end&#13;
  n = (n-last)/2&#13;
  cnt = cnt + 1&#13;
 end&#13;
&#13;
 return tbl&#13;
end&#13;

local function tbl_to_number(tbl)&#13;
 local n = table.getn(tbl)&#13;
&#13;
 local rslt = 0&#13;
 local power = 1&#13;
 for i = 1, n do&#13;
  rslt = rslt + tbl[i]*power&#13;
  power = power*2&#13;
 end&#13;
 &#13;
 return rslt&#13;
end&#13;
&#13;
&#13;
local function expand(tbl_m, tbl_n)&#13;
 local big = {}&#13;
 local small = {}&#13;
 if(table.getn(tbl_m) &gt; table.getn(tbl_n)) then&#13;
  big = tbl_m&#13;
  small = tbl_n&#13;
 else&#13;
  big = tbl_n&#13;
  small = tbl_m&#13;
 end&#13;
 -- expand small&#13;
 for i = table.getn(small) + 1, table.getn(big) do&#13;
  small[i] = 0&#13;
 end&#13;
&#13;
end&#13;
&#13;

local function bit_and(m, n)&#13;
 local tbl_m = to_bits(m)&#13;
 local tbl_n = to_bits(n)&#13;
 expand(tbl_m, tbl_n) &#13;
&#13;
 local tbl = {}&#13;
 local rslt = math.max(table.getn(tbl_m), table.getn(tbl_n))&#13;
 for i = 1, rslt do&#13;
  if(tbl_m[i]== 0 or tbl_n[i] == 0) then&#13;
   tbl[i] = 0&#13;
  else&#13;
   tbl[i] = 1&#13;
  end&#13;
 end&#13;
&#13;
 return tbl_to_number(tbl)&#13;
end&#13;
&#13;

if (result ~= null) then
	value = result:getValue()
	number = value:getUnsignedNumber()
	if (bit_and(number, 8) ~= 0) then
		logSrc:logMessage(_VERSION, 111, synalysis.SEVERITY_INFO, &quot;my message&quot; .. tostring(number))
-- get currently processed grammar. This may change if another grammar is referenced
currentGrammar = currentMapper:getCurrentGrammar()

-- get the structure we want to apply
structure = currentGrammar:getStructureByName(&quot;Data descriptor&quot;)

-- map structure at current parsing position and add number of parsed bytes to enclosing structure
bytesProcessed = currentMapper:mapStructure(structure)
	end
end

</source>
                </script>
            </scriptelement>
        </structure>
    </grammar>
</ufwb>
